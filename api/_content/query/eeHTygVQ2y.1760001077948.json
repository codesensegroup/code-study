{"_path":"/workshop/gitlab-cicd","_dir":"workshop","_draft":false,"_partial":false,"_locale":"","title":"使用Gitlab做CI/CD","description":"","pageTitle":"使用Gitlab做CI/CD","contributors":["spyua","changemyminds"],"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"前言"},"children":[{"type":"text","value":"前言"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"此章節不屬於持續交付2.0書中內容，額外挪出的一個教學章節。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"CI/CD目前在大部分會做頻繁整合與部屬的團隊都已在使用，因此在開發中在目前的趨勢中有一定的必要性。CI為持續整合，他的用意本質在於當既有程式碼或產品有任何異動時，可以在短時間內完成整合，並確保用作如預期。而CD為持續交付，注意英文中的D為Delivery而不是Deployment。用意在讓任何一個異動可以保有品質的盡快交給客戶，並能為此帶來對應的價值，此章節會手把手教學如何使用Gitlab來達到CI/CD自動化。並透過CI/CD將.Net Core專案部屬到部屬機上。"}]},{"type":"element","tag":"alert","props":{},"children":[{"type":"text","value":"\nCI/CD精神在於做到快速整合並保有高品質且能交付客戶使用，重點在於精神大於自動化工具，因此每個專案與產品狀況團隊也會具有不同的計畫與交付流程。\n"}]},{"type":"element","tag":"h2","props":{"id":"簡易開發流程"},"children":[{"type":"text","value":"簡易開發流程"}]},{"type":"element","tag":"h3","props":{"id":"不使用cicd"},"children":[{"type":"text","value":"不使用CI/CD"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"一般簡易開發整合流程為"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Step1. 開發"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Step2. 建置"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Step3. 測試"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Step4. 部屬"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如下圖所示，在沒有自動化整合平台下，基本上所有流程都須透過手動去完成。"}]},{"type":"element","tag":"div","props":{"align":"center"},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"img","props":{"src":"/code-study/images/workshop/gitlab-cicd/001.png","width":"100%"},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"使用cicd"},"children":[{"type":"text","value":"使用CI/CD"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如下圖所示，我們只需要寫好Script File，交付到Gitlab，並在Gitlab Server上做好設定，Server就會根據Script腳本所寫的指令(命令)，交付Runner Server作執行。在使用此自動化整合架構下，我們可透過Gitlab與Runner Server完成上述的步驟開發、建置、測試與整合，甚至是程式碼分析。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"一般CI會做建置測試與程式碼分析，而CD則是做部屬、整合測試與交付。在不同的應用場合下，設置會根據不同環境應用建立專屬CI與CD Runner服務。但此章節不會講到太複雜的情境，會以簡易的開發、建置、測試與部屬四個步驟帶過。"}]},{"type":"element","tag":"div","props":{"align":"center"},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"img","props":{"src":"/code-study/images/workshop/gitlab-cicd/002.png","width":"100%"},"children":[]}]},{"type":"element","tag":"alert","props":{},"children":[{"type":"text","value":"\n一般可做自動化整合的Git Server，都會需要一個代理伺服器(Runner Server)來幫忙執行Script。因此我們會需要一台機器做專門的Runner Server來服務Git Server。\n"}]},{"type":"element","tag":"h2","props":{"id":"runner-server設定"},"children":[{"type":"text","value":"Runner Server設定"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Runner Server須根據開發應用選擇不同的作業環境，例如若你的專案已.Net Framework為主。你想做自動化整合，你的Runner機台則就須選用Windows OS。若日可做跨平台的.Net Core，你則可以選擇Linux OS環境去架設Runner Server。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"因Runner Server會根據Script指令做建置與測試甚至是部屬，所以需安裝可執行相對應的CLI指令及SDK。如上述提到的.Net Core，若Runner Server要編譯.Net Core專案，則就需安裝相對應的SDK。若CD需透過SSH連至部屬機操作，則Runner Server則需具備SSH連線能力。簡單的說，開發環境可做的事情，大部分在Runner上也要都具有相同功能。"}]},{"type":"element","tag":"h3","props":{"id":"gitlab-runner分類"},"children":[{"type":"text","value":"Gitlab Runner分類"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Gitlab Runner設置有三種模式，如下"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Share Runner : 所有Group或專案可使用，不需自行架設Runner，免費版本兩千分鐘使用限制。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Specific(Project) Runner : 特定需求使用，需自行架設Runner。\n"},{"type":"element","tag":"img","props":{"alt":"003","src":"/code-study/images/workshop/gitlab-cicd/003.png"},"children":[]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Group Runner : 同Group的Project可使用，需自行架設Runner。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"004","src":"/code-study/images/workshop/gitlab-cicd/004.png"},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"安裝runner設定"},"children":[{"type":"text","value":"安裝Runner設定"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"上述提到Runner設置有三種，此文章我們會以Group Runner設置為主，請先至以下路徑"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"YourGroup → Setting → CI/CD → Runner (點選Expand)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"展開後，請點選New group runner view的Take me there就會進入到Runners 設定頁面如下圖，"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"004","src":"/code-study/images/workshop/gitlab-cicd/004.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"你可以點選右上角的Register a group runner，並根據你要設置的平台，在Show runner installation and registration instructions 選項有詳細設置方式，如下圖"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"005","src":"/code-study/images/workshop/gitlab-cicd/005.png"},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"windows設置官網說明"},"children":[{"type":"text","value":"Windows設置["},{"type":"element","tag":"a","props":{"href":"https://docs.gitlab.com/runner/install/","rel":["nofollow"]},"children":[{"type":"text","value":"官網說明"}]},{"type":"text","value":"]"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Step1 : "},{"type":"element","tag":"a","props":{"href":"https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-windows-amd64.exe","rel":["nofollow"]},"children":[{"type":"text","value":"下載Windows Gitlab Runner檔案"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Step2 : 安裝與啟動"}]}]},{"type":"element","tag":"pre","props":{"className":"language-=script","code":"# 切換到下載目錄\ncd D:\\SystemService\\gitlab-runner\n\n# 安裝服務\ngitlab-runner-windows-amd64.exe install\n\n# 進行服務啟動\ngitlab-runner-windows-amd64.exe start\n","language":"=script","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# 切換到下載目錄\ncd D:\\SystemService\\gitlab-runner\n\n# 安裝服務\ngitlab-runner-windows-amd64.exe install\n\n# 進行服務啟動\ngitlab-runner-windows-amd64.exe start\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"安裝和啟動服務成功後，可以透過工具管理員查看狀態"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Step3 : 註冊"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"至YourGroup → Setting → CI/CD → Runner (點選Expand) → Take me there → Register group runner →Show runner installation and registration instructions"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"點選Windows Tab 此時就會跑出建議指令流程，"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"006","src":"/code-study/images/workshop/gitlab-cicd/006.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"請輸入Register指令"}]},{"type":"element","tag":"pre","props":{"className":"language-Script","code":"./gitlab-runner.exe register --url https://gitlab.com/ --registration-token your token\n","language":"Script","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"./gitlab-runner.exe register --url https://gitlab.com/ --registration-token your token\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Step4 : 設置Register參數\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"a. Gitlab URL : 若是Group Runner，可以輸入Group Gitlab的URL(Ex:"},{"type":"element","tag":"a","props":{"href":"https://gitlab.com/groupxxxx","rel":["nofollow"]},"children":[{"type":"text","value":"https://gitlab.com/groupxxxx"}]},{"type":"text","value":")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"b. Registration Token : Your Token (Group Token or Specific Project Token)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"c. Description : 關於此Runner的描述"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"d. Tags : 寫CI.yml時，工作會根據Tag名稱指向符合此名稱的Runner，所以這參數設定很重要，一般可以根據你的環境去命名例如Windows-xxxx或者是Linux-xxxx"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"e. Maintenance note : 維護說明，可填寫維護時須注意事項"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"f. Executor : 執行器種類，若要走較一般的CI就是選shell，執行器就可根據不同作業系統做對應的CLI執行器設定(例如Windows設定PowerShell，Linux設定bash。"},{"type":"element","tag":"a","props":{"href":"https://docs.gitlab.com/runner/shells/","rel":["nofollow"]},"children":[{"type":"text","value":"參考"}]},{"type":"text","value":")"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Step5 : 完成"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"此時我們在點選"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"YourGroup → Setting → CI/CD → Runner (點選Expand) → Take me there"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"你就可以看到註冊好的Runner顯示在設定頁面上了"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"007","src":"/code-study/images/workshop/gitlab-cicd/007.png"},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"linux設置官網說明"},"children":[{"type":"text","value":"Linux設置["},{"type":"element","tag":"a","props":{"href":"https://docs.gitlab.com/runner/install/","rel":["nofollow"]},"children":[{"type":"text","value":"官網說明"}]},{"type":"text","value":"]"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Step 1 : 安裝與啟動"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"至Gitlab說明文件直接照步驟操刀"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"至YourGroup → Setting → CI/CD → Runner (點選Expand) → Take me there → Register group runner →Show runner installation and registration instructions"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"008","src":"/code-study/images/workshop/gitlab-cicd/008.png"},"children":[]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Step 2 : 註冊 (可直接參照上述 Windows設置註冊)"}]}]},{"type":"element","tag":"h3","props":{"id":"shell設置"},"children":[{"type":"text","value":"Shell設置"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"上述設置好Ruuner後，接著需調整Runner設定檔的執行器，請開啟Runner資料夾下的toml檔，並照下圖設置"}]},{"type":"element","tag":"div","props":{"align":"center"},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"img","props":{"src":"/code-study/images/workshop/gitlab-cicd/009.png","width":"70%"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"詳細對應Shell設定可至此查詢["},{"type":"element","tag":"a","props":{"href":"https://docs.gitlab.com/runner/shells/","rel":["nofollow"]},"children":[{"type":"text","value":"連結請點我"}]},{"type":"text","value":"]"}]},{"type":"element","tag":"h3","props":{"id":"安裝編譯環境設定"},"children":[{"type":"text","value":"安裝編譯環境設定"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"因為Runner為代替本機電腦做建置、測試與部屬。所以需在上面安裝相對應環境，專案上我們會使用dotnet core為範例。所以電腦需安裝對應需有的SDK，若使用Docker則需安裝Docker環境。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.microsoft.com/zh-tw/dotnet/core/install/windows?tabs=net60","rel":["nofollow"]},"children":[{"type":"text","value":"Net Core SDK安裝參考"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/changemyminds/script/tree/master/docker/install","rel":["nofollow"]},"children":[{"type":"text","value":"Dokcer安裝參考"}]},{"type":"text","value":" 好用請給讚，謝謝"}]}]},{"type":"element","tag":"h2","props":{"id":"ci撰寫"},"children":[{"type":"text","value":"CI撰寫"}]},{"type":"element","tag":"h3","props":{"id":"建置與測試"},"children":[{"type":"text","value":"建置與測試"}]},{"type":"element","tag":"h3","props":{"id":"hello-cicd"},"children":[{"type":"text","value":"Hello CI/CD"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"請到此下載Sample Code"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://gitlab.com/test8214/emptyproject","rel":["nofollow"]},"children":[{"type":"text","value":"https://gitlab.com/test8214/emptyproject"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"下載下來後將此專案上到你的Group Project，若你的Runner已設好，我們可以直接從Gitlab頁面點選 Set up CI/C，如下圖"}]},{"type":"element","tag":"div","props":{"align":"center"},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"img","props":{"src":"/code-study/images/workshop/gitlab-cicd/010.png","width":"90%"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"接著點選Configure pipeline，此時Gitlab會幫你生成yml Sample Code，此Sample Code已幫你寫好的基本build, test與deploy Stages。請將最上層註解刪除，並加上default區段，runner tag"}]},{"type":"element","tag":"pre","props":{"className":"language-=script","code":"# default表示所有job都會參考以及使用\ndefault:\n  # 使用Gitlab Runner有相關的標籤\n  tags:\n    - Windows(根據你的Runner Tag去填寫)\n","language":"=script","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# default表示所有job都會參考以及使用\ndefault:\n  # 使用Gitlab Runner有相關的標籤\n  tags:\n    - Windows(根據你的Runner Tag去填寫)\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"此時若Runner設置無誤，就可以看到Gitlab開始跑CI/CD，如下圖"}]},{"type":"element","tag":"div","props":{"align":"center"},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"img","props":{"src":"/code-study/images/workshop/gitlab-cicd/011.png","width":"90%"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"根據此腳本，我們可以得知CI.yml的基本語法由stages及對應的job name中的script。若要新增Job則只需在stages新增，例如我們在test站點後新增build-release，請修改stage區塊如下"}]},{"type":"element","tag":"pre","props":{"className":"language-yaml shiki shiki-themes github-dark github-light monokai","code":"stages:          # List of stages for jobs, and their order of execution.\n  - build\n  - test\n  - build-release # 新增build-release\n  - deploy\n","language":"yaml","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"stages"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":          "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"# List of stages for jobs, and their order of execution.\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"  - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"build\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"  - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"test\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"  - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"build-release"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":" # 新增build-release\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"  - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"deploy\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"並將以下Script放置lint-test-job下"}]},{"type":"element","tag":"pre","props":{"className":"language-yaml shiki shiki-themes github-dark github-light monokai","code":"lint-test-job:   # This job also runs in the test stage.\n  stage: test    # It can run at the same time as unit-test-job (in parallel).\n  script:\n    - echo \"Linting code... This will take about 10 seconds.\"\n    - sleep 10\n    - echo \"No lint issues found.\"\n\n#新增build-release job\nbuild-release-job:\n  stage: build-release\n  script:\n    - echo \"Build release app package...\"\n    - echo \"Build complete.\"\n","language":"yaml","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"lint-test-job"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":   "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"# This job also runs in the test stage.\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  stage"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"test"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"    # It can run at the same time as unit-test-job (in parallel).\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  script"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"echo \"Linting code... This will take about 10 seconds.\"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"sleep 10\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"echo \"No lint issues found.\"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"#新增build-release job\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"build-release-job"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  stage"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"build-release\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  script"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"echo \"Build release app package...\"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":13},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"echo \"Build complete.\"\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"接著做commit，我們即可看到Pipeline由三個站點變成四個站點"}]},{"type":"element","tag":"div","props":{"align":"center"},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"img","props":{"src":"/code-study/images/workshop/gitlab-cicd/012.png","width":"100%"},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"build-與-test"},"children":[{"type":"text","value":"build 與 test"}]},{"type":"element","tag":"h4","props":{"id":"build-job"},"children":[{"type":"text","value":"build-job"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"一般在CI/CD Sample，很常會看到這個站點，用意在測試建置專案是否能編譯過。在dotnet core專案，我們在CLI模式下可以用dotnet build去建置專案，此時我們可以嘗試將build-job站點script加入dotnet build指令(建議先註解調build job以外的job Script站別)，如下"}]},{"type":"element","tag":"pre","props":{"className":"language-yaml shiki shiki-themes github-dark github-light monokai","code":"build-job:       # This job runs in the build stage, which runs first.\n  stage: build\n  script:\n    - echo \"Compiling the code...\"\n    - dotnet build SampleWebAPI\\src\\SampleWebAPI -c debug\n","language":"yaml","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"build-job"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":       "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"# This job runs in the build stage, which runs first.\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  stage"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"build\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  script"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"echo \"Compiling the code...\"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"dotnet build SampleWebAPI\\src\\SampleWebAPI -c debug\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"更新yml file後，檢查一下Pipeline能否編輯的過。編譯過可看到訊息如下"}]},{"type":"element","tag":"div","props":{"align":"center"},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"img","props":{"src":"/code-study/images/workshop/gitlab-cicd/013.png","width":"100%"},"children":[]}]},{"type":"element","tag":"h4","props":{"id":"unit-test-job"},"children":[{"type":"text","value":"unit-test-job"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"接著我們嘗試加入Test Job，請刪除lint-test-job只保留unit-test-job並將dotnet test加入script，如下"}]},{"type":"element","tag":"pre","props":{"className":"language-=script","code":"unit-test-job:   # This job runs in the test stage.\n  stage: test    # It only starts when the job in the build stage completes successfully.\n  script:\n    - echo \"Running unit tests... This will take about 60 seconds.\"\n    - dotnet test SampleWebAPI\\test\\SampleWebAPI.Test\n","language":"=script","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"unit-test-job:   # This job runs in the test stage.\n  stage: test    # It only starts when the job in the build stage completes successfully.\n  script:\n    - echo \"Running unit tests... This will take about 60 seconds.\"\n    - dotnet test SampleWebAPI\\test\\SampleWebAPI.Test\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"更新yml file後，檢查一下Pipeline能否編輯的過。編譯過可看到訊息如下"}]},{"type":"element","tag":"div","props":{"align":"center"},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"img","props":{"src":"/code-study/images/workshop/gitlab-cicd/014.png","width":"100%"},"children":[]}]},{"type":"element","tag":"h4","props":{"id":"使用變數"},"children":[{"type":"text","value":"使用變數"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"上述編譯與測試有使用到dotnet build與test，基本上我們可以將我們的src與test路徑寫成變數，這樣在使用上可以重複利用減少重複的程式碼"}]},{"type":"element","tag":"pre","props":{"className":"language-yaml shiki shiki-themes github-dark github-light monokai","code":"variables:\n  AppFolderPath: SampleWebAPI\\\\src\\\\SampleWebAPI\n  TestFolderPath: SampleWebAPI\\\\test\\\\SampleWebAPI.Test\n","language":"yaml","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"variables"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  AppFolderPath"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"SampleWebAPI\\\\src\\\\SampleWebAPI\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  TestFolderPath"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"SampleWebAPI\\\\test\\\\SampleWebAPI.Test\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"接著將原本的Build與Test Jib Script換掉"}]},{"type":"element","tag":"pre","props":{"className":"language-yaml shiki shiki-themes github-dark github-light monokai","code":"build-job:       # This job runs in the build stage, which runs first.\n  stage: build\n  script:\n    - echo \"Compiling the code...\"\n    - dotnet build ${AppFolderPath} -c debug\n\nunit-test-job:   # This job runs in the test stage.\n  stage: test    # It only starts when the job in the build stage completes successfully.\n  script:\n    - echo \"Running unit tests... This will take about 60 seconds.\"\n    - dotnet test ${TestFolderPath}\n","language":"yaml","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"build-job"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":       "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"# This job runs in the build stage, which runs first.\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  stage"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"build\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  script"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"echo \"Compiling the code...\"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"dotnet build ${AppFolderPath} -c debug\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"unit-test-job"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":   "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"# This job runs in the test stage.\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  stage"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"test"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"    # It only starts when the job in the build stage completes successfully.\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  script"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"echo \"Running unit tests... This will take about 60 seconds.\"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"dotnet test ${TestFolderPath}\n"}]}]}]}]},{"type":"element","tag":"alert","props":{},"children":[{"type":"text","value":"\n因為我們使用dot net core，如果我們有寫測試Code，我們可以直接省略測試建置這個站點(build-job)。只需要做Test即可(unit-test-job)。下dot net test時，因為要跑測試，他會順便建置App專案。\n"}]},{"type":"element","tag":"h2","props":{"id":"cd撰寫"},"children":[{"type":"text","value":"CD撰寫"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"接著我們要做簡易的Release建置與部屬，因為Windows權限設置較麻煩，這部分Demo我們使用Linux Runner去實現(Windows系統若要快速啟用Linux Runner，可以使用WSL2)。請啟用Linux Runner並在Runner上設置好.net core需要編譯的SDK安裝，另外則是SSH安裝。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Runner設置好後，我們將上述提到的default區塊使用到的tags設定，由Windows改成Linux(在此可根據你的Linux設置)。接著將上述寫好的腳本將斜線改成反斜線，參考Script如下"}]},{"type":"element","tag":"pre","props":{"className":"language-yaml shiki shiki-themes github-dark github-light monokai","code":"# default表示所有job都會參考以及使用\ndefault:\n  # 使用Gitlab Runner有相關的標籤\n  tags:\n    - Linux\n\nvariables:\n  AppFolderPath: SampleWebAPI//src//SampleWebAPI\n  TestFolderPath: SampleWebAPI//test//SampleWebAPI.Test\n\nstages:          # List of stages for jobs, and their order of execution\n  - test\n\nunit-test-job:   # This job runs in the test stage.\n  stage: test    # It only starts when the job in the build stage completes successfully.\n  script:\n    - echo \"Running unit tests... This will take about 60 seconds.\"\n    - dotnet test ${TestFolderPath}\n\n","language":"yaml","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"# default表示所有job都會參考以及使用\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"default"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"  # 使用Gitlab Runner有相關的標籤\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  tags"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"Linux\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"variables"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  AppFolderPath"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"SampleWebAPI//src//SampleWebAPI\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  TestFolderPath"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"SampleWebAPI//test//SampleWebAPI.Test\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"stages"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":          "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"# List of stages for jobs, and their order of execution\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"  - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"test\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":13},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":14},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"unit-test-job"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":   "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"# This job runs in the test stage.\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":15},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  stage"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":": "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"test"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"    # It only starts when the job in the build stage completes successfully.\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":16},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#85E89D;--shiki-default:#22863A;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  script"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":17},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"echo \"Running unit tests... This will take about 60 seconds.\"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":18},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    - "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"dotnet test ${TestFolderPath}\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"若已確定你的Pipeline無誤，接著就可以往下走測試Release建置與部屬"}]},{"type":"element","tag":"h3","props":{"id":"建置與部屬"},"children":[{"type":"text","value":"建置與部屬"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在建置部屬之前，請先準備好你的部屬Server，目前此章節用的部屬Server為Ubuntu 20.04 Linux，並已安裝好"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":".Net Core 3.1 SDK"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"SSH"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Docker"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"pm2"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"unzip"}]}]},{"type":"element","tag":"h3","props":{"id":"ssh設定"},"children":[{"type":"text","value":"SSH設定"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"為了簡易Demo，連線部分我們直接使用ssh與部屬Server溝通，為了免登入密碼，故須設置ssh私鑰與公鑰。請至你的Linux Runner資料夾底下會有一個.ssh file。若你是照Gitlab上的步驟設置，沒意外你的Runner路徑會在home底下"}]},{"type":"element","tag":"pre","props":{"className":"language-yaml shiki shiki-themes github-dark github-light monokai","code":"# 切換sudo\nsudo -i\n\n# 切換到ssh目錄下\ncd /home/gitlab-runner/.ssh\n\n#產生金鑰匙(方便測試可全按Enter)\nssh-keygen\n\n#更改私鑰權限為600\nchmod 600 id_rsa\n\n# 接著將你的公鑰傳至你的部屬機上\nscp id_dsa.pub user@abc.xxx.xxx.xxx:/root/.ssh/id_dsa.pub\n","language":"yaml","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"# 切換sudo\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"sudo -i\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"# 切換到ssh目錄下\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"cd /home/gitlab-runner/.ssh\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"#產生金鑰匙(方便測試可全按Enter)\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"ssh-keygen\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"#更改私鑰權限為600\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"chmod 600 id_rsa\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":13},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"# 接著將你的公鑰傳至你的部屬機上\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":14},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"scp id_dsa.pub user@abc.xxx.xxx.xxx:/root/.ssh/id_dsa.pub\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"接著連過去部屬機"}]},{"type":"element","tag":"pre","props":{"className":"language-yaml shiki shiki-themes github-dark github-light monokai","code":"# 連線部屬機\nssh root@abc.xxx.xxx.xxx\n\n# 輸入密碼\n\n# 至SSH File底下將Key複製一分到authorized_keys檔案底下\ncat id_rsa.pub > authorized_keys\n\n# 確定authorized_keys權限為600\nchmod 600 authorized_keys\n\n# 登出\nexit\n\n# 再次登入確定是否免密碼\nssh root@abc.xxx.xxx.xxx\n\n","language":"yaml","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"# 連線部屬機\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"ssh root@abc.xxx.xxx.xxx\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"# 輸入密碼\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"# 至SSH File底下將Key複製一分到authorized_keys檔案底下\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"cat id_rsa.pub > authorized_keys\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"# 確定authorized_keys權限為600\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"chmod 600 authorized_keys\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"# 登出\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":13},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"exit\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":14},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":15},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"# 再次登入確定是否免密碼\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":16},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"ssh root@abc.xxx.xxx.xxx\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"比較笨的方式，你也可以手動複製將你自己Runner下的私鑰手動複製到部屬機的authorized_keys檔案"}]},{"type":"element","tag":"h3","props":{"id":"project-ssh-key變數"},"children":[{"type":"text","value":"Project SSH Key變數"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"確定好Runner與部屬機之間已可免密碼連線後，我們需要在將Runner的私鑰複製一份至專案的CI/CD設定下"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"請至你Group"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"YourPorject Repo/Settings/CICD 下"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"此時你會看到Variables，請新增一SSH_PRIVATE_KEY變數如下"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"015","src":"/code-study/images/workshop/gitlab-cicd/015.png"},"children":[]}]},{"type":"element","tag":"alert","props":{},"children":[{"type":"text","value":"\n須注意!因為是Group Runner，所以一開始我只將SSH PK設置在Group Setting的CICD設置變數下。結果Project上tags觸發Pipeline在部屬時找不到SSH PK。所以Project Repo若要上tags，須將SSH PK設置在Project Repo Setting的CICD變數設定下。\n"}]},{"type":"element","tag":"h3","props":{"id":"build-release-job與deploy"},"children":[{"type":"text","value":"build-release-job與deploy"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"部屬機等環境設置好後，接下來就開始寫Release與deploy。先簡單帶artifacts版本，然後連至部屬主機將artifacts載下來後，解壓縮直接透過pm2將web api服務啟起來。"}]},{"type":"element","tag":"h4","props":{"id":"build-release-job"},"children":[{"type":"text","value":"build-release-job"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"為了減少測試時間。我們可以先嘗試使用dotnet publish指令，自己先試看看有無問題，無問題通常可以直接將指令複製到script上。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"建置release stage，參考script如下"}]},{"type":"element","tag":"pre","props":{"className":"language-=script","code":"default:\n  tags:\n    - Linux\n\nvariables:\n  AppFolderPath: SampleWebAPI//src//SampleWebAPI\n  TestFolderPath: SampleWebAPI//test//SampleWebAPI.Test\n\nstages:          \n  - test\n  # 建置release stage\n  - release\n\nunit-test-job:  \n  stage: test\n  script:\n    - echo \"Running unit tests... This will take about 60 seconds.\"\n    - dotnet test ${TestFolderPath}\n\n# 建置release stage\nbuild-release-job:\n  stage: release\n  script:\n    - echo \"Build release...\"\n    - dotnet publish ${AppFolderPath} -c release\n","language":"=script","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"default:\n  tags:\n    - Linux\n\nvariables:\n  AppFolderPath: SampleWebAPI//src//SampleWebAPI\n  TestFolderPath: SampleWebAPI//test//SampleWebAPI.Test\n\nstages:          \n  - test\n  # 建置release stage\n  - release\n\nunit-test-job:  \n  stage: test\n  script:\n    - echo \"Running unit tests... This will take about 60 seconds.\"\n    - dotnet test ${TestFolderPath}\n\n# 建置release stage\nbuild-release-job:\n  stage: release\n  script:\n    - echo \"Build release...\"\n    - dotnet publish ${AppFolderPath} -c release\n"}]}]},{"type":"element","tag":"h4","props":{"id":"建置artifacts"},"children":[{"type":"text","value":"建置artifacts"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"接著我們希望在release job完成後同步產生artifacts。參考script如下"}]},{"type":"element","tag":"pre","props":{"className":"language-script","code":"build-release-job:\n  stage: release\n  script:\n    - echo \"Build release...\"\n    - dotnet publish ${AppFolderPath} -c release\n  artifacts:\n    # on_success always on_failure\n    when: always \n    # 30 mins, 1 weeks...\n    expire_in: 30 mins\n    paths:\n      - ./SampleWebAPI/src/SampleWebAPI/bin/release/netcoreapp3.1\n","language":"script","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"build-release-job:\n  stage: release\n  script:\n    - echo \"Build release...\"\n    - dotnet publish ${AppFolderPath} -c release\n  artifacts:\n    # on_success always on_failure\n    when: always \n    # 30 mins, 1 weeks...\n    expire_in: 30 mins\n    paths:\n      - ./SampleWebAPI/src/SampleWebAPI/bin/release/netcoreapp3.1\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"我們將artifacts寫至build-release-job下，這邊會有幾個設定"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"when : upload articacts時機 ("},{"type":"element","tag":"a","props":{"href":"https://docs.gitlab.com/ee/ci/yaml/#artifactswhen","rel":["nofollow"]},"children":[{"type":"text","value":"參考點我"}]},{"type":"text","value":")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"expire : articats 存活時間 ("},{"type":"element","tag":"a","props":{"href":"https://docs.gitlab.com/ee/ci/yaml/#artifactsexclude","rel":["nofollow"]},"children":[{"type":"text","value":"參考點我"}]},{"type":"text","value":")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"paths: 要包裝檔案的路徑"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"此時我們在跑一次Pipeline，就可以看到build-release-job下有個可下載的介面(如下圖)，代表你的artifactst產生成功。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"016","src":"/code-study/images/workshop/gitlab-cicd/016.png"},"children":[]}]},{"type":"element","tag":"h4","props":{"id":"artifacts-url測試參考點我"},"children":[{"type":"text","value":"artifacts url測試("},{"type":"element","tag":"a","props":{"href":"https://docs.gitlab.com/ee/ci/pipelines/job_artifacts.html#access-the-latest-job-artifacts-by-url","rel":["nofollow"]},"children":[{"type":"text","value":"參考點我"}]},{"type":"text","value":")"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"接著我們可以透過url下載artifacts，Sample如下"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://gitlab.com/test8214/testproject/-/jobs/artifacts/main/download?job=build-release-job","rel":["nofollow"]},"children":[{"type":"text","value":"https://gitlab.com/test8214/testproject/-/jobs/artifacts/main/download?job=build-release-job"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"可修改的部分"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"test8214 : 你的Group Url"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"testproject : Project Repository Name"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"main:表示主線"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"release-job:表示你的stage job"}]}]},{"type":"element","tag":"font","props":{"color":"#dd0000"},"children":[{"type":"text","value":"\n artifacts Project URL請根據你實際的 Project URL設定調整，誤直接照抄\n"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"所以此url的意思為要從testproject下main主線最後一個成功Pipeline的build-release-job下載artifacts。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"另外，比較好的方法是用CI_JOB_TOKEN去打Job Artifacts API拿取Artifacts，參考如\n連結"},{"type":"element","tag":"a","props":{"href":"https://docs.gitlab.com/ee/api/job_artifacts.html","rel":["nofollow"]},"children":[{"type":"text","value":"https://docs.gitlab.com/ee/api/job_artifacts.html"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"因為url方式是拿取最後一個Pipeline的build-release-job產物，代表他會拿取前一個成功的Pipline產物不是當下運行Pipeline的build-release-job產物。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"因為這樣，所以這個Demo就不會將build-release-job上only tags。讓deploy可以正確拿取目前運行Pipeline編譯好的程式碼如下。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"017","src":"/code-study/images/workshop/gitlab-cicd/017.png"},"children":[]}]},{"type":"element","tag":"alert","props":{},"children":[{"type":"text","value":"\n較好的Pepeline設計是將release設置在tag觸發時，也就是做CD時機點。後續再找時間修正artifacts下載方式\n"}]},{"type":"element","tag":"h4","props":{"id":"deploy"},"children":[{"type":"text","value":"deploy"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在build-release-job做完後，接著我們要做deploy stage，一開始我們須建立ssh連線，腳本指令如下"}]},{"type":"element","tag":"pre","props":{"className":"language-script","code":"deploy-job:\n  stage: deploy\n  script:\n    - eval $(ssh-agent -s)\n    - echo \"$SSH_PRIVATE_KEY\" | tr -d '\\r' | ssh-add -     \n    - mkdir -p ~/.ssh     \n    - chmod 700 ~/.ssh \n    -> \n      ssh -o StrictHostKeyChecking=no -v user@125.229.14.65 -p 40122\n","language":"script","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"deploy-job:\n  stage: deploy\n  script:\n    - eval $(ssh-agent -s)\n    - echo \"$SSH_PRIVATE_KEY\" | tr -d '\\r' | ssh-add -     \n    - mkdir -p ~/.ssh     \n    - chmod 700 ~/.ssh \n    -> \n      ssh -o StrictHostKeyChecking=no -v user@125.229.14.65 -p 40122\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這部分會稍微難了解一點，整體來說，主要目的在於建立一個具有PK權限的連線，讓Gitlab Runner可以在不同已允許權限的部屬主機連線(也許不只一台)。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"細節部分，ssh-agent有點像是管理ssh key的工具。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"第一行eval通常是印出來的意思，有點類似 echo，不過他可以直接把指令顯示出來，所以此處為顯示ssh-agent的狀態。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"第二行是把 gitlab的環境變數讀取出來，之後 tr -d  '\\r' 主要是把換行給取代掉，windows內建是CRLF 相當於 /r/n，而這邊的 /r 就是Carriage-Return，所謂的迴車字元。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"第三行創建 -/.ssh 是在目前使用者目錄底下創建 .ssh，用來記錄等一下你的ssh連線資訊，通常ssh連線後，會記錄在一個叫做 known_host的檔案。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"寫好連線deploy-job後，我們可以嘗試讓他跑看看能否連線部屬主機成功，"}]},{"type":"element","tag":"pre","props":{"className":"language-script","code":"default:\n  tags:\n    - Linux\n\nvariables:\n  AppFolderPath: SampleWebAPI//src//SampleWebAPI\n  TestFolderPath: SampleWebAPI//test//SampleWebAPI.Test\n\nstages:          \n  - test\n  - release\n  # 部屬\n  - deploy\n\nunit-test-job:  \n  stage: test\n  script:\n    - echo \"Running unit tests... This will take about 60 seconds.\"\n    - dotnet test ${TestFolderPath}\n\n\nbuild-release-job:\n  stage: release\n  script:\n    - echo \"Build release...\"\n    - dotnet publish ${AppFolderPath} -c release\n  artifacts:\n    # on_success always on_failure\n    when: always \n    # 30 mins, 1 weeks...\n    expire_in: 30 mins\n    paths:\n      - ./SampleWebAPI/src/SampleWebAPI/bin/release/netcoreapp3.1\n# 部屬      \ndeploy-job:\n  stage: deploy\n  script:\n    - eval $(ssh-agent -s)\n    - echo \"$SSH_PRIVATE_KEY\" | tr -d '\\r' | ssh-add -     \n    - mkdir -p ~/.ssh     \n    - chmod 700 ~/.ssh \n    -> \n      ssh -o StrictHostKeyChecking=no -v user@125.229.14.65 -p 40122\n","language":"script","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"default:\n  tags:\n    - Linux\n\nvariables:\n  AppFolderPath: SampleWebAPI//src//SampleWebAPI\n  TestFolderPath: SampleWebAPI//test//SampleWebAPI.Test\n\nstages:          \n  - test\n  - release\n  # 部屬\n  - deploy\n\nunit-test-job:  \n  stage: test\n  script:\n    - echo \"Running unit tests... This will take about 60 seconds.\"\n    - dotnet test ${TestFolderPath}\n\n\nbuild-release-job:\n  stage: release\n  script:\n    - echo \"Build release...\"\n    - dotnet publish ${AppFolderPath} -c release\n  artifacts:\n    # on_success always on_failure\n    when: always \n    # 30 mins, 1 weeks...\n    expire_in: 30 mins\n    paths:\n      - ./SampleWebAPI/src/SampleWebAPI/bin/release/netcoreapp3.1\n# 部屬      \ndeploy-job:\n  stage: deploy\n  script:\n    - eval $(ssh-agent -s)\n    - echo \"$SSH_PRIVATE_KEY\" | tr -d '\\r' | ssh-add -     \n    - mkdir -p ~/.ssh     \n    - chmod 700 ~/.ssh \n    -> \n      ssh -o StrictHostKeyChecking=no -v user@125.229.14.65 -p 40122\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"若連線成功，deploy stage則會運行通過(打勾勾)，接著就可以開始寫連至部屬Server的指令了。這邊可以看到有一個->的符號，代表此符號區段下的指令是在SSH目標主機上執行。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"接著連過去後，我們加入要執行的Script指令"}]},{"type":"element","tag":"pre","props":{"className":"language-script","code":"# 部屬      \ndeploy-job:\n  stage: deploy\n  script:\n    - eval $(ssh-agent -s)\n    - echo \"$SSH_PRIVATE_KEY\" | tr -d '\\r' | ssh-add -     \n    - mkdir -p ~/.ssh     \n    - chmod 700 ~/.ssh \n    - >\n      ssh -o StrictHostKeyChecking=no -v user@125.229.14.65 -p 40122\n      \"mkdir -p ~/sampleapi &&\n       wget -O ~/sampleapi/release-build.zip https://gitlab.com/test8214/testproject/-/jobs/artifacts/main/download?job=build-release-job &&\n       sudo unzip -o ~/sampleapi/release-build.zip -d ~/sampleapi &&\n       pm2 start 'dotnet ~/sampleapi/SampleWebAPI/src/SampleWebAPI/bin/release/netcoreapp3.1/SampleWebAPI.dll --urls http://0.0.0.0:5000' --name 'code-sense-api-service' &&\n       pm2 delete code-sense-api-service &&\n       pm2 start 'dotnet ~/sampleapi/SampleWebAPI/src/SampleWebAPI/bin/release/netcoreapp3.1/SampleWebAPI.dll --urls http://0.0.0.0:5000' --name 'code-sense-api-service'\n      \"\n","language":"script","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# 部屬      \ndeploy-job:\n  stage: deploy\n  script:\n    - eval $(ssh-agent -s)\n    - echo \"$SSH_PRIVATE_KEY\" | tr -d '\\r' | ssh-add -     \n    - mkdir -p ~/.ssh     \n    - chmod 700 ~/.ssh \n    - >\n      ssh -o StrictHostKeyChecking=no -v user@125.229.14.65 -p 40122\n      \"mkdir -p ~/sampleapi &&\n       wget -O ~/sampleapi/release-build.zip https://gitlab.com/test8214/testproject/-/jobs/artifacts/main/download?job=build-release-job &&\n       sudo unzip -o ~/sampleapi/release-build.zip -d ~/sampleapi &&\n       pm2 start 'dotnet ~/sampleapi/SampleWebAPI/src/SampleWebAPI/bin/release/netcoreapp3.1/SampleWebAPI.dll --urls http://0.0.0.0:5000' --name 'code-sense-api-service' &&\n       pm2 delete code-sense-api-service &&\n       pm2 start 'dotnet ~/sampleapi/SampleWebAPI/src/SampleWebAPI/bin/release/netcoreapp3.1/SampleWebAPI.dll --urls http://0.0.0.0:5000' --name 'code-sense-api-service'\n      \"\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"指令內容大致是連至目標主機後，"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"在user下建置sampleapi資料夾"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"下載artifacts"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"解壓鎖"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"使用pm2將Service Run起來"}]}]},{"type":"element","tag":"font","props":{"color":"#dd0000"},"children":[{"type":"text","value":"\n artifacts Project URL請根據你實際的 Project URL設定調整，誤直接照抄\n"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"018","src":"/code-study/images/workshop/gitlab-cicd/018.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"deploy完後此時就可以透過API，得到資料"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://x.x.x.x:%E4%BD%A0%E7%9A%84%E5%B0%8D%E5%A4%96Port/weatherforecast","rel":["nofollow"]},"children":[{"type":"text","value":"http://x.x.x.x:你的對外Port/weatherforecast"}]}]},{"type":"element","tag":"alert","props":{},"children":[{"type":"text","value":"\ndeploy可以看到pm2 start兩次，因為在第一次加入時沒有對應service name可以刪除會出錯。使用> /dev/null 測試沒用。只能先用此法暫解。章節目的還是在於如何建立一起一條簡易的CI/CD Pipeline為注。正式複雜的場合可以參考Docker版本\n"}]},{"type":"element","tag":"h4","props":{"id":"only-tags"},"children":[{"type":"text","value":"only tags"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"接著我們要在deploy上tags觸發事件(上標籤)，只需要在原本的script下，多一個tags屬性"}]},{"type":"element","tag":"pre","props":{"className":"language-script","code":"# 部屬      \ndeploy-job:\n  stage: deploy\n  script:\n    - eval $(ssh-agent -s)\n    - echo \"$SSH_PRIVATE_KEY\" | tr -d '\\r' | ssh-add -     \n    - mkdir -p ~/.ssh     \n    - chmod 700 ~/.ssh \n    - >\n      ssh -o StrictHostKeyChecking=no -v user@125.229.14.65 -p 40122\n      \"mkdir -p ~/sampleapi &&\n       wget -O ~/sampleapi/release-build.zip https://gitlab.com/test8214/testproject/-/jobs/artifacts/main/download?job=build-release-job &&\n       sudo unzip -o ~/sampleapi/release-build.zip -d ~/sampleapi &&\n       pm2 start 'dotnet ~/sampleapi/SampleWebAPI/src/SampleWebAPI/bin/release/netcoreapp3.1/SampleWebAPI.dll --urls http://0.0.0.0:5000' --name 'code-sense-api-service' &&\n       pm2 delete code-sense-api-service &&\n       pm2 start 'dotnet ~/sampleapi/SampleWebAPI/src/SampleWebAPI/bin/release/netcoreapp3.1/SampleWebAPI.dll --urls http://0.0.0.0:5000' --name 'code-sense-api-service'\n      \"\n  # 上tags觸發事件\n  only:\n    - tags\n","language":"script","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# 部屬      \ndeploy-job:\n  stage: deploy\n  script:\n    - eval $(ssh-agent -s)\n    - echo \"$SSH_PRIVATE_KEY\" | tr -d '\\r' | ssh-add -     \n    - mkdir -p ~/.ssh     \n    - chmod 700 ~/.ssh \n    - >\n      ssh -o StrictHostKeyChecking=no -v user@125.229.14.65 -p 40122\n      \"mkdir -p ~/sampleapi &&\n       wget -O ~/sampleapi/release-build.zip https://gitlab.com/test8214/testproject/-/jobs/artifacts/main/download?job=build-release-job &&\n       sudo unzip -o ~/sampleapi/release-build.zip -d ~/sampleapi &&\n       pm2 start 'dotnet ~/sampleapi/SampleWebAPI/src/SampleWebAPI/bin/release/netcoreapp3.1/SampleWebAPI.dll --urls http://0.0.0.0:5000' --name 'code-sense-api-service' &&\n       pm2 delete code-sense-api-service &&\n       pm2 start 'dotnet ~/sampleapi/SampleWebAPI/src/SampleWebAPI/bin/release/netcoreapp3.1/SampleWebAPI.dll --urls http://0.0.0.0:5000' --name 'code-sense-api-service'\n      \"\n  # 上tags觸發事件\n  only:\n    - tags\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"上完tags後，deploy事件則只會在你上tag時觸發。接著就可以在tag頁面看到此次的release tag是否有通過Pipeline Job。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"019","src":"/code-study/images/workshop/gitlab-cicd/019.png"},"children":[]}]},{"type":"element","tag":"alert","props":{},"children":[{"type":"text","value":"\n一般CD做release build與deploy都會上only tags，此範例因為artifacts還不確定是不是已正確方式拿取，所以只在deploy上only tags。\n"}]},{"type":"element","tag":"h2","props":{"id":"參考專案"},"children":[{"type":"text","value":"參考專案"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Repository:"},{"type":"element","tag":"a","props":{"href":"https://gitlab.com/test8214/testproject","rel":["nofollow"]},"children":[{"type":"text","value":"https://gitlab.com/test8214/testproject"}]}]},{"type":"element","tag":"h2","props":{"id":"docker版本speak後續待寫"},"children":[{"type":"text","value":"Docker版本(Speak，後續待寫)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Repository:"},{"type":"element","tag":"a","props":{"href":"https://gitlab.com/test8214/demoproject","rel":["nofollow"]},"children":[{"type":"text","value":"https://gitlab.com/test8214/demoproject"}]}]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":"html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"前言","depth":2,"text":"前言"},{"id":"簡易開發流程","depth":2,"text":"簡易開發流程","children":[{"id":"不使用cicd","depth":3,"text":"不使用CI/CD"},{"id":"使用cicd","depth":3,"text":"使用CI/CD"}]},{"id":"runner-server設定","depth":2,"text":"Runner Server設定","children":[{"id":"gitlab-runner分類","depth":3,"text":"Gitlab Runner分類"},{"id":"安裝runner設定","depth":3,"text":"安裝Runner設定"},{"id":"windows設置官網說明","depth":3,"text":"Windows設置[官網說明]"},{"id":"linux設置官網說明","depth":3,"text":"Linux設置[官網說明]"},{"id":"shell設置","depth":3,"text":"Shell設置"},{"id":"安裝編譯環境設定","depth":3,"text":"安裝編譯環境設定"}]},{"id":"ci撰寫","depth":2,"text":"CI撰寫","children":[{"id":"建置與測試","depth":3,"text":"建置與測試"},{"id":"hello-cicd","depth":3,"text":"Hello CI/CD"},{"id":"build-與-test","depth":3,"text":"build 與 test"}]},{"id":"cd撰寫","depth":2,"text":"CD撰寫","children":[{"id":"建置與部屬","depth":3,"text":"建置與部屬"},{"id":"ssh設定","depth":3,"text":"SSH設定"},{"id":"project-ssh-key變數","depth":3,"text":"Project SSH Key變數"},{"id":"build-release-job與deploy","depth":3,"text":"build-release-job與deploy"}]},{"id":"參考專案","depth":2,"text":"參考專案"},{"id":"docker版本speak後續待寫","depth":2,"text":"Docker版本(Speak，後續待寫)"}]}},"_type":"markdown","_id":"content:2.workshop:gitlab-cicd.md","_source":"content","_file":"2.workshop/gitlab-cicd.md","_extension":"md"}