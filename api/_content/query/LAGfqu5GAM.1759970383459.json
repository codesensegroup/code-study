{"_path":"/clean-arch/chapter21","_dir":"clean-arch","_draft":false,"_partial":false,"_locale":"","title":"21 會尖叫的架構","description":"","pageTitle":"Chapter 21 會尖叫的架構","contributors":["jacksnow811"],"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"前言"},"children":[{"type":"text","value":"前言"}]},{"type":"element","tag":"details","props":{"style":"margin-bottom:30px"},"children":[{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"案例1"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"阿宏最近看了一張室內設計圖並有興趣購買，你覺得他是想開一間餐廳、運動場還是想幹什麼呢?"}]},{"type":"element","tag":"div","props":{"style":"display: flex;"},"children":[{"type":"text","value":"\n    "},{"type":"element","tag":"img","props":{"src":"/code-study/images/clean-arch/21/01.png","alt":"Image 1","style":"width: 32.5%;margin-bottom:0"},"children":[]}]},{"type":"text","value":"\n(5年房含車位，37萬/坪，總價1800萬，我只想說...)\n"}]},{"type":"element","tag":"details","props":{},"children":[{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"案例2"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"看了底下某個專案目錄，你想到了什麼?"}]},{"type":"element","tag":"div","props":{"style":"display: flex;"},"children":[{"type":"text","value":"\n    "},{"type":"element","tag":"div","props":{},"children":[{"type":"text","value":"\n        "},{"type":"element","tag":"img","props":{"src":"/code-study/images/clean-arch/21/02.png","alt":"Image 2","style":"height: 80%; margin-bottom:0"},"children":[]},{"type":"text","value":"\n        (前端)\n    "}]},{"type":"text","value":"\n    "},{"type":"element","tag":"div","props":{},"children":[{"type":"text","value":"\n        "},{"type":"element","tag":"img","props":{"src":"/code-study/images/clean-arch/21/03.png","alt":"Image 3","style":"height: 80%;margin-bottom:0"},"children":[]},{"type":"text","value":"\n        (後端)\n    "}]}]},{"type":"text","value":"\n書中說: 這是一個XXX系統，而非是一個用XXX語言寫的系統。\n"}]},{"type":"element","tag":"h2","props":{"id":"架構的主題"},"children":[{"type":"text","value":"架構的主題"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"軟體架構是支援系統使用案例的結構，就像住宅或圖書館的平面圖會對「這些建築物的使用案例」尖叫那樣，軟體的應用程式架構也應該對「應用程式的使用案例」尖叫。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"架構不是(或不應該是)關於框架的，框架是工具，框架不是架構要順應的對象，如果你的架構是基於框架的，那它就不能基於你的使用案例。"}]},{"type":"element","tag":"h2","props":{"id":"架構的目的"},"children":[{"type":"text","value":"架構的目的"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"良好的架構會以使用案例為中心去設計，且不必對框架、工具、環境做出承諾，想想房屋的平面圖案例，建築師最關心的問題是確保房子是可用的，而不是確保房子是磚頭做成的，事實上，建築師要努力確保屋主可以在平面圖能確保滿足使用案例後，才對於外部材料(磚、石材、柏木)做出決定。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"架構應該使"},{"type":"element","tag":"span","props":{"style":"color: #ff6666"},"children":[{"type":"text","value":"框架是保持開放的選項"}]},{"type":"text","value":"，一個好的架構會讓專案直到後期之前都不需要對於採用框架、資料庫、Web服務器及其他環境問題(K8S? VM?)做出決定，架構強調的是使用者案例!"}]},{"type":"element","tag":"h2","props":{"id":"但是web呢"},"children":[{"type":"text","value":"但是Web呢?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Web是架構嗎? 當然不是，Web只是一種交付機制 - 是一種IO設備，事實上，你的系統該如何被交付出去(或如何輸出結果)，這應該是最後才決定的事情!"}]},{"type":"element","tag":"details","props":{},"children":[{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"悲慘案例"}]},{"type":"text","value":"\n阿宏的公司很喜歡用winform這種桌面應用程式框架實作系統給User使用(輸出系統結果)，由於User的電腦環境千奇百怪，於是出現各種奇怪的報案(不能安裝、不能開啟、不能上傳檔案，轉圈圈很久)，有天老闆終於受不了了，希望我們全面轉Web，經工程師討論後我們發現...這需要極大的成本...。\n"},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"原因: 沒有包成套件也沒有採用API，我們一開始就將「框架」跟「架構」綁在一起，所以只要動到GUI就會動到Business logic。"}]}]},{"type":"element","tag":"h2","props":{"id":"框架是工具不是存在的方式"},"children":[{"type":"text","value":"框架是工具，不是存在的方式"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"框架真的是太好用了，好用到你會讓它影響你的架構，看看前面winform的例子，由於它確實可以很快拉出一個版面，也正是因為這種方便，讓人們忽略應該把Business logic拆分出來，以為做任何系統都可以以這種低成本的方式製作，進而不斷產生一堆技術債..."}]},{"type":"element","tag":"h2","props":{"id":"可測試的架構"},"children":[{"type":"text","value":"可測試的架構"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如果你的系統架構是關於使用案例的，且如果對框架保持一定的安全距離，那應該可以在沒有任何框架的情況下，對所有這些使用者案例做單元測試，你不需要在Web伺服器下運行你的測試，你也不必在連接資料庫的時候做測試，Entity應該是只依賴最原生套件(最純粹)所開發的物件，這樣，你的架構才是一個"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"可測試的架構"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"h2","props":{"id":"總結"},"children":[{"type":"text","value":"總結"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"你的架構應該告訴閱讀者關於這個系統的事情(Business)，而不是你系統中所使用的框架、Web服務器或是資料庫。"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"前言","depth":2,"text":"前言"},{"id":"架構的主題","depth":2,"text":"架構的主題"},{"id":"架構的目的","depth":2,"text":"架構的目的"},{"id":"但是web呢","depth":2,"text":"但是Web呢?"},{"id":"框架是工具不是存在的方式","depth":2,"text":"框架是工具，不是存在的方式"},{"id":"可測試的架構","depth":2,"text":"可測試的架構"},{"id":"總結","depth":2,"text":"總結"}]}},"_type":"markdown","_id":"content:6.clean-arch:21.chapter21.md","_source":"content","_file":"6.clean-arch/21.chapter21.md","_extension":"md"}