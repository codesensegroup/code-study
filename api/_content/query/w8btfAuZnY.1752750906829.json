{"_path":"/sdi-aig/chapter6","_dir":"sdi-aig","_draft":false,"_partial":false,"_locale":"","title":"設計鍵值儲存系統","description":"ref: CHAPTER 06：DESIGN A KEY-VALUE STORE.md","pageTitle":"Chapter 6 設計鍵值儲存系統","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"ref: "},{"type":"element","tag":"a","props":{"href":"https://github.com/Admol/SystemDesign/blob/main/CHAPTER%2006%EF%BC%9ADESIGN%20A%20KEY-VALUE%20STORE.md","rel":["nofollow"]},"children":[{"type":"text","value":"CHAPTER 06：DESIGN A KEY-VALUE STORE.md"}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"ref: "},{"type":"element","tag":"a","props":{"href":"https://tw.annas-archive.org/md5/e89be9442169fe8f89a2fda597797668","rel":["nofollow"]},"children":[{"type":"text","value":"https://tw.annas-archive.org/md5/e89be9442169fe8f89a2fda597797668"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"ref: "},{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=8TE2DvpKxvA","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.youtube.com/watch?v=8TE2DvpKxvA"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"ref: "},{"type":"element","tag":"a","props":{"href":"https://youtu.be/o6q8zPmfVLU?si=M7Y-FWqM-tuORxn7","rel":["nofollow"]},"children":[{"type":"text","value":"https://youtu.be/o6q8zPmfVLU?si=M7Y-FWqM-tuORxn7"}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"以 C# /.NET 8 與 MSSQL 為主要範例語言／平台，分 2 – 3 次（每次 40‑50 分鐘）循序漸進講解本章重點，並輔以可執行的程式碼片段與示意圖。"}]}]},{"type":"element","tag":"h2","props":{"id":"整體章節重點-birdeye-view"},"children":[{"type":"text","value":"整體章節重點 (Bird‑Eye View)"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Key‑Value Store 基礎"}]},{"type":"text","value":"：資料模型、操作介面 ("},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"put"}]},{"type":"text","value":" / "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"get"}]},{"type":"text","value":")。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"擴充挑戰"}]},{"type":"text","value":"：從單機記憶體雜湊表 → 分散式雜湊表 (DHT)。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"CAP 與一致性"}]},{"type":"text","value":"：AP / CP 系統選擇、N / W / R 仲裁參數。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"資料分區與複本"}]},{"type":"text","value":"：一致性雜湊、跨資料中心複寫。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"衝突處理"}]},{"type":"text","value":"：Vector Clock、最終一致性。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"容錯機制"}]},{"type":"text","value":"：Gossip 偵錯、Sloppy Quorum、Hinted Handoff、Anti‑Entropy & Merkle Tree。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"讀寫流程"}]},{"type":"text","value":"：Commit Log → MemTable → SSTable；MemTable / Bloom Filter 多層快取。"}]}]},{"type":"element","tag":"h2","props":{"id":"本章要求"},"children":[{"type":"text","value":"本章要求"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"設計出一個可支援以下操作的鍵值儲存系統："}]}]},{"type":"element","tag":"pre","props":{"className":"language-c# shiki shiki-themes github-dark github-light monokai","code":"  - put(key, value) // 插入一組與「key」鍵相關聯的「vlaue」值\n  - get(key) // 取出與「key」鍵相關聯的「vlaue」值\n","language":"c#","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  -"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#B392F0;--shiki-default:#6F42C1;--shiki-sepia:#A6E22E"},"children":[{"type":"text","value":" put"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"(key, value) "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"// 插入一組與「key」鍵相關聯的「vlaue」值\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"  -"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#B392F0;--shiki-default:#6F42C1;--shiki-sepia:#A6E22E"},"children":[{"type":"text","value":" get"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"(key) "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"// 取出與「key」鍵相關聯的「vlaue」值\n"}]}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"瞭解問題並確立設計的範圍"},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"天底下沒有完美的設計。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n每一種設計都必須在記憶體讀取、寫入與使用方面進行取捨，以達到某種特定的平衡。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n在一致性與可用性之間，也需要進行權衡取捨。"},{"type":"element","tag":"br","props":{},"children":[]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"設計的範圍設定：\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"鍵值對的尺寸很小，小於 10 KB。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"有能力儲存大數據資料。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"高可用性：即使發生故障，系統也可以快速回應。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"高擴展性：系統可進行擴展，以支援大型資料集。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"自動擴展：應該可以根據流量，自動添加/移除伺服器。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"可調整系統一致性的程度。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"低延遲。"}]}]}]}]}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"session1-從零開始認識-keyvalue-store"},"children":[{"type":"text","value":"Session 1 ： 從零開始認識 Key‑Value Store"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"鍵值資料庫（Key-Value Store，也稱鍵值存儲）是一種"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"非關聯式資料庫"}]},{"type":"text","value":"，以 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"「鍵-值對」"}]},{"type":"text","value":" 形式儲存資料。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"每筆資料由 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"唯一的鍵（key）"}]},{"type":"text","value":" 識別並對應一個 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"值（value）"}]},{"type":"text","value":"，類似 Dictionary 或 Hash Table 的概念。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"鍵："}]},{"type":"text","value":" 通常為短字串或其雜湊，須具唯一性以快速索引；"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"值："}]},{"type":"text","value":" 可以是任意類型的二進位資料，系統通常將值視為不透明的blob（例如 Redis、Memcached 即採用此模型）。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"主流產品 (Redis、DynamoDB…)"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"alt text","src":"/images/sdi-aig/06/table-6-1.png"},"children":[]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"session2-單機設計-vs-分散式挑戰"},"children":[{"type":"text","value":"Session 2 ： 單機設計 v.s. 分散式挑戰"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"雜湊表 + 壓縮 + 冷資料落盤"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"何時需要走向分散式 → 大容量、高可用"}]}]},{"type":"element","tag":"h3","props":{"id":"單一伺服器的鍵值儲存系統"},"children":[{"type":"text","value":"單一伺服器的鍵值儲存系統："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"簡單實作："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"最直接的做法就是把「鍵值對」全部放到記憶體。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"雜湊表（Hash Table） 在記憶體中保存所有鍵值對。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"基本操作包括 put(key, value)（寫入/更新鍵的值）與 get(key)（讀取鍵的值）。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"資料結構："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"使用如 C# 的 Dictionary<string, string> 即可達成 O(1) 的鍵查詢時間。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"記憶體 vs 磁碟："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"若資料量可能超過記憶體，可透過LRU快取策略將常用資料留在記憶體，不常用資料寫入磁碟檔案；"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"也可採用資料壓縮減少空間。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"容量侷限："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"即使有上述優化，單台伺服器的記憶體與磁碟總有上限，大規模資料最終會超出單機容量。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"此時需要水平擴充（scale out）至分散式鍵值存儲架構。"}]}]}]}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"h3","props":{"id":"分散式鍵值儲存系統"},"children":[{"type":"text","value":"分散式鍵值儲存系統："}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"分散式鍵值存儲（Distributed Key-Value Store）又稱分散式雜湊表（DHT），透過多部伺服器共同存放整體資料集。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n設計分散式系統時，理解 CAP 定理 極其重要。"},{"type":"element","tag":"br","props":{},"children":[]}]}]},{"type":"element","tag":"h4","props":{"id":"cap-定理簡介"},"children":[{"type":"text","value":"CAP 定理簡介"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"CAP 定理，又稱 Brewer 定理，由 Eric Brewer 於 2000 年提出，2002 年經 Seth Gilbert 與 Nancy Lynch 形式化證明。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"定理指出：在一個分散式資料存儲系統中，只能在以下三者中最多同時滿足兩項，無法兼得三者。"}]},{"type":"text","value":" ("},{"type":"element","tag":"a","props":{"href":"https://cloud.tencent.com/developer/article/2355483","rel":["nofollow"],"title":"CAP定理一文带你速解（通俗易懂，图文并茂）-腾讯云开发者社区-腾讯云"},"children":[{"type":"text","value":"腾讯云"}]},{"type":"text","value":")\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"一致性 ( Consistency )、"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"可用性 ( Availability )、"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"分區容錯性 ( Partition Tolerance )"}]}]}]}]},{"type":"element","tag":"h5","props":{"id":"三大屬性定義"},"children":[{"type":"text","value":"三大屬性定義"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"一致性 ( Consistency, C )："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"保證每次讀取都能拿到最新的寫入值，或者返回錯誤，"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"也就是「所有節點在同一時間看到相同資料」的強一致性承諾。("},{"type":"element","tag":"a","props":{"href":"https://cloud.tencent.com/developer/article/2355483","rel":["nofollow"],"title":"CAP定理一文带你速解（通俗易懂，图文并茂）-腾讯云开发者社区-腾讯云"},"children":[{"type":"text","value":"腾讯云"}]},{"type":"text","value":")"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"可用性 ( Availability, A )："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"系統對每次請求都能在有限時間內做出響應（非錯誤或超時）。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"即便部分節點失效，健康節點依然對外提供服務。("},{"type":"element","tag":"a","props":{"href":"https://cloud.tencent.com/developer/article/2355483","rel":["nofollow"],"title":"CAP定理一文带你速解（通俗易懂，图文并茂）-腾讯云开发者社区-腾讯云"},"children":[{"type":"text","value":"腾讯云"}]},{"type":"text","value":")"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"分區容錯性 ( Partition Tolerance, P )："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"當系統節點間發生網路分區（訊息丟失或延遲）時，仍能繼續對外提供服務。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"由於大規模分散式系統中網路分區幾乎不可避免，P 通常被視為必須保障的屬性。("},{"type":"element","tag":"a","props":{"href":"https://cloud.tencent.com/developer/article/2355483","rel":["nofollow"],"title":"CAP定理一文带你速解（通俗易懂，图文并茂）-腾讯云开发者社区-腾讯云"},"children":[{"type":"text","value":"腾讯云"}]},{"type":"text","value":")"}]}]}]}]},{"type":"element","tag":"h5","props":{"id":"屬性兩兩組合與典型示例"},"children":[{"type":"text","value":"屬性兩兩組合與典型示例"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"alt text","src":"/images/sdi-aig/06/img-6-1.png"},"children":[]}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"CA（一致性 + 可用性，放棄 P）"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"適用於無須考慮網路分區容錯的場景，"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"例如："},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"單機或單資料中心部署"}]},{"type":"text","value":"的關係型資料庫系統（如 SQL Server 等）。("},{"type":"element","tag":"a","props":{"href":"https://en.wikipedia.org/wiki/CAP_theorem?utm_source=chatgpt.com","rel":["nofollow"],"title":"CAP theorem - Wikipedia"},"children":[{"type":"text","value":"維基百科"}]},{"type":"text","value":")"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"CP（一致性 + 分區容錯，放棄 A）"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"在發生分區容錯時"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"優先保證強一致性，犧牲可用性。"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"例如：MongoDB，在分區容錯期間會"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"拒絕服務以確保一致性。"}]},{"type":"text","value":"("},{"type":"element","tag":"a","props":{"href":"https://stackoverflow.com/questions/11292215/where-does-mongodb-stand-in-the-cap-theorem?utm_source=chatgpt.com","rel":["nofollow"],"title":"Where does MongoDB stand in the CAP theorem? - Stack Overflow"},"children":[{"type":"text","value":"Stack Overflow"}]},{"type":"text","value":")"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"AP（可用性 + 分區容錯，放棄 C）"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"在發生分區容錯時"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"優先保證可用性"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"允許短暫不一致，並透過最終一致性（Reconciliation）進行修復。"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"例如：Apache Cassandra，即使分區容錯期間也繼續響應請求，"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"可能讀到舊值。"}]},{"type":"text","value":" ("},{"type":"element","tag":"a","props":{"href":"https://stackoverflow.com/questions/20205797/which-part-of-the-cap-theorem-does-cassandra-sacrifice-and-why?utm_source=chatgpt.com","rel":["nofollow"],"title":"partitioning - Which part of the CAP theorem does Cassandra sacrifice and why? - Stack Overflow"},"children":[{"type":"text","value":"Stack Overflow"}]},{"type":"text","value":")"}]}]}]}]},{"type":"element","tag":"h5","props":{"id":"理想情況"},"children":[{"type":"text","value":"理想情況"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"alt text","src":"/images/sdi-aig/06/img-6-2.png"},"children":[]},{"type":"text","value":"\n在理想情況下，永遠不會發生網路分區容錯的問題："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"寫入 n1 的資料自動就會複製到 n2、n3。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"如此可達到一致性與可用性。"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"h5","props":{"id":"現實世界的分散式系統"},"children":[{"type":"text","value":"現實世界的分散式系統"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"alt text","src":"/images/sdi-aig/06/img-6-3.png"},"children":[]},{"type":"text","value":"\n在真實環境中，網路分區容錯的發生是不可避免的："}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"節點 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"n3"}]},{"type":"text","value":" 因故離線，無法與 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"n1"}]},{"type":"text","value":"、"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"n2"}]},{"type":"text","value":" 溝通；"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"若客戶端將資料寫入 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"n1"}]},{"type":"text","value":"／"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"n2"}]},{"type":"text","value":"，則資料無法傳遞到 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"n3"}]},{"type":"text","value":"；"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"若寫入 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"n3"}]},{"type":"text","value":" 卻未傳至 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"n1"}]},{"type":"text","value":"／"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"n2"}]},{"type":"text","value":"，則後者只能保有舊版資料。"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"CP 系統（強一致性優先）"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"發生分區時，拒絕或延後對 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"n1"}]},{"type":"text","value":"、"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"n2"}]},{"type":"text","value":" 的寫入，確保所有可用節點資料一致，犧牲可用性──"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n銀行系統即屬此類，必須保證餘額一定為最新狀態。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"AP 系統（可用性優先）"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"分區期間仍接受讀寫，可能返回舊資料；待網路恢復後再同步至 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"n3"}]},{"type":"text","value":"，最終達成一致。"}]}]}]}]},{"type":"element","tag":"h5","props":{"id":"設計取捨與面試要點-cap"},"children":[{"type":"text","value":"設計取捨與面試要點 - CAP"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"為何必須取捨？"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"分散式系統中網路分區（P）不可避免，"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"當發生分區時，系統無法同時保證既讀取最新值(C)、又對所有請求都做出響應(A)。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"必須在一致性與可用性間做出取捨。"}]},{"type":"text","value":"("},{"type":"element","tag":"a","props":{"href":"https://ruanyifeng.com/blog/2018/07/cap.html?utm_source=chatgpt.com","rel":["nofollow"],"title":"CAP 定理的含义 - 阮一峰的网络日志"},"children":[{"type":"text","value":"ruanyifeng.com"}]},{"type":"text","value":")"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"如何依場景選擇？"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"金融支付"}]},{"type":"text","value":"：對資料一致性要求極高，常選 CP ，確保交易正確無誤。("},{"type":"element","tag":"a","props":{"href":"https://www.ibm.com/think/topics/cap-theorem?utm_source=chatgpt.com","rel":["nofollow"],"title":"What is the CAP theorem? - IBM"},"children":[{"type":"text","value":"IBM"}]},{"type":"text","value":")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"社交推薦、日誌收集"}]},{"type":"text","value":"：對可用性和吞吐量要求優先，常選 AP 。("},{"type":"element","tag":"a","props":{"href":"https://www.ibm.com/think/topics/cap-theorem?utm_source=chatgpt.com","rel":["nofollow"],"title":"What is the CAP theorem? - IBM"},"children":[{"type":"text","value":"IBM"}]},{"type":"text","value":")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"內部管理系統"}]},{"type":"text","value":"：網路分區風險較低，可選 CA 以簡化設計。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"面試常見考察點"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"正確認識 C/A/P 三者含義及差異。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"針對不同業務場景，說明為何在 C/A/P 間做出具體取捨。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"以具體系統（如 Key-Value 儲存）為例，闡述如何實現 CAP（Quorum、Hinted Handoff、Anti-Entropy 等機制）。"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"透過以上整理，您可在系統設計面試中清晰闡述 CAP 定理，並結合業務需求給出合理架構選擇。"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"session3-鍵值儲存系統的構成元素"},"children":[{"type":"text","value":"Session 3 ： 鍵值儲存系統的構成元素"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"我們打算在本節討論以下這些核心元素與技術，與建構出相應的鍵值儲存系統。 "},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n以下內容主要是以三個很受歡迎的鍵值儲存系統為基礎： Dynamo、Cassandra 與 BigTable"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"資料分區 ( data partition )"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"資料複製 ( data replication )"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"一致性"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"不一致問題的解決方式"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"故障的處理方式"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"系統架構圖"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"寫入途徑"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"讀取途徑"}]}]},{"type":"element","tag":"h3","props":{"id":"資料分區一致性雜湊與水平擴充"},"children":[{"type":"text","value":"資料分區：一致性雜湊與水平擴充"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"當資料規模龐大時，將全部鍵值對存於單一節點(伺服器)，是一種不可行的做法。"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"資料分區（data partition）："}]},{"type":"text","value":" 將資料拆分到多個節點(伺服器)存放。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"資料分區面臨兩大挑戰："}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"資料均勻分布："}]},{"type":"text","value":" 確保各節點負載均衡，避免有的節點存了過多資料、成為瓶頸。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"動態伸縮："}]},{"type":"text","value":" 節點數量增加或減少時，儘量減少資料在節點間搬移的成本。"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"為解決上述問題"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"一致性雜湊（Consistent Hashing）是一種經典技術。"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"一致性雜湊：將整個雜湊值空間組織成一個雜湊環（Hash Ring）然後將節點和資料鍵都映射到此環上。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"alt text","src":"/images/sdi-aig/06/img-6-4.png"},"children":[]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"首先，伺服器會被放到雜湊環上。在圖 6-4 中， s0、s1、....、s7 所代表的8部伺服器全都被放到雜湊環上。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"接著，有一個鍵也進行了雜湊運算，而被放到了同一個雜湊環上。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"存放規則："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"從資料鍵映射點 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"順時針"}]},{"type":"text","value":" 遇到的第一個節點，即為此鍵的負責節點。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"key0 運用存放規則的邏輯，最後保存到 s1 之中。"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"一致性雜湊的優點："}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"自動水平擴充："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"可平滑地新增/移除節點而無需重新分配全部鍵。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"加入節點，只需重新分配"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"鄰近區域"}]},{"type":"text","value":"的一部分鍵；"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"移除節點，其負載自動攤分給鄰近節點。這滿足動態擴縮需求。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"最小資料搬移："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"新增或移除節點時，只需移動環上極少量鍵，不影響其它區段的資料。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"負載均衡 ( 可因應 不均勻性/異質性 的問題 )："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"結合"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"虛擬節點"}]},{"type":"text","value":"機制，能讓節點根據性能配置不同數量的虛擬節點，避免因節點性能差異導致負載不均（容量越大的節點可在環上放置更多虛擬節點，獲取較大區間的鍵）。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"例： 如果某個伺服器的容量比較大，只要指定比較多的虛擬節點給它就可以了。"}]}]}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"h3","props":{"id":"資料複製高可用性的基石"},"children":[{"type":"text","value":"資料複製：高可用性的基石"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"為了達到高可用性與可靠性 ( relibility )"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"為提升系統"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"容錯性"}]},{"type":"text","value":"與"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"高可用性"}]},{"type":"text","value":"，分散式鍵值存儲通常將資料 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"複製（Replication）"}]},{"type":"text","value":" 至多個節點。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"也就是對每個鍵值對保存多份拷貝，放置於"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"不同節點"}]},{"type":"text","value":"，當部分節點故障時仍能由其他副本提供服務。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"常用的複製策略如下： "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"key0 會被複製到 s1 、 s2 、 s3 ( N=3 )"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"alt text","src":"/images/sdi-aig/06/img-6-5.png"},"children":[]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"複製因子 N：就是儲存 N 份"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"每筆資料儲存 N 份（包含原始1份+ N-1份副本）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"例如： N=3，此時系統至少需有 N 個節點才能容納所有副本。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"副本選擇：必須確保節點不重複"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Key0 先按上述一致性雜湊的方式找到"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"主存節點"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"再沿雜湊環"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"順時針方向選擇接續的 N-1 個"}]},{"type":"text","value":"獨立節點作為副本存放處。\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"例如 N=3 時，"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"key0 可存於 s1（主）以及後續的 s2、s3 節點上，共三副本。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"若遇到"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"虛擬節點映射同一實體節點的情況，則跳過重複實體以確保副本分散在不同實體節點。"}]}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"跨機房分佈：提高可靠性"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"為防同機房故障導致副本同時損失，通常會將 N 個副本分布在"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"多個資料中心"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"例如：3個副本可放在三個不同機房，透過高速網路互聯同步。"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"透過適當的複製策略，可以實現讀取的高可用："}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"即使一兩個節點故障，資料的其他副本仍可提供服務。同時多副本也提高了資料耐久性（不易因單點損毀而永久丟失）。"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"註："}]},{"type":"text","value":" 複製帶來"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"一致性維護"}]},{"type":"text","value":"的挑戰 —— 當多個副本存在時，如何確保各副本的值一致，是後續「一致性」與「衝突解決」部分要解決的問題。"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"h3","props":{"id":"一致性quorum-機制與最終一致性"},"children":[{"type":"text","value":"一致性：Quorum 機制與最終一致性"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如果沒有額外措施，不同副本可能出現數據不一致（如有的收到更新，有的因網路問題未收到）。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如前所述，將資料複製到多個節點可以提高可用性，但也帶來"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"副本間數據同步"}]},{"type":"text","value":"的難題。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"為管理一致性，可採用 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Quorum 共識機制"}]},{"type":"text","value":"調節讀寫操作："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"定義："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"N："}]},{"type":"text","value":" 副本的數量 ( 如下圖 6-6，N=3 )。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"W："}]},{"type":"text","value":" 寫入的最低門檻，寫入操作必須至少有 W 個副本回應確認，才視為寫入成功。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"R："}]},{"type":"text","value":" 讀取的最低門檻，讀取操作必須等待至少有 R 個副本回應，才視為讀取成功。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"運作："}]},{"type":"text","value":" 以圖 6-6 為例 N=3 資料被製到 s0、s1、s2。"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"協調者 ( coordinator ) ："}]},{"type":"text","value":" 代表客戶端與節點之間代理者 ( proxy ) 的角色。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"W=1："}]},{"type":"text","value":" 每次"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"寫入"}]},{"type":"text","value":"，協調者"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"必須至少收到一個 ACK 確認"}]},{"type":"text","value":"，才能回覆客戶端成功。"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"不代表資料只寫入"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"1個節點"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"如果從 s1 收到了確認，就不需要再等待 s0 與 s2 的確認了。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"W=2："}]},{"type":"text","value":" 每次"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"寫入"}]},{"type":"text","value":"，協調者"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"必須至少收到二個 ACK 確認"}]},{"type":"text","value":"，才能回覆客戶端成功。"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"如果從 s1 收到了確認，要再等待 s0 或 s2 的確認。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"R=2："}]},{"type":"text","value":" 每次"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"讀取"}]},{"type":"text","value":"，協調者"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"會並行查詢至少2個副本，並等待回應，最後取其中最新版本後再返回"}]},{"type":"text","value":"，才能回覆客戶端成功。"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"alt text","src":"/images/sdi-aig/06/img-6-6.png"},"children":[]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"延遲 vs 一致性："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"W、R 的選擇代表延遲與一致性的權衡。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"W或R越小：操作響應越快，但返回舊數據的風險增大。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"W或R越大：數據一致性越好，但需等待更多節點，延遲提高。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"強一致性保證的條件："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"W=N + R=1 ："}]},{"type":"text","value":" 就表示系統針對快速"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"讀取"}]},{"type":"text","value":"進行最佳化。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"W=1 + R=N ："}]},{"type":"text","value":" 就表示系統針對快速"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"寫入"}]},{"type":"text","value":"進行最佳化。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"W + R > N ："}]},{"type":"text","value":" 就可以"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"具有強一致性"}]},{"type":"text","value":"。因為任意一筆資料的讀寫集合會在至少一個共同副本相交，確保讀一定能讀到最新寫入。(例如 N=3，W=R=2)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"W + R <= N ："}]},{"type":"text","value":" 則"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"不能保證"}]},{"type":"text","value":"具有強一致性。"}]}]}]}]},{"type":"element","tag":"h5","props":{"id":"設計取捨與面試要點-一致性模型"},"children":[{"type":"text","value":"設計取捨與面試要點 - 一致性模型"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在設計鍵值儲存系統時，一致性模型確實是一個需要考慮的重要因素。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"一致性模型定義的是資料一致性程度，而實際上確實存在各式各樣不同的一致性模型："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"強一致性："}]},{"type":"text","value":" 任何讀取操作所送回的值，都對應到最新寫入資料項的結果。"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"客戶端絕不會看到過時的資料。"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"弱一致性："}]},{"type":"text","value":" 後續的讀取操作有可能看到的並不是最新的值。"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"客戶端可能不是最新的資料。"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"最終一致性 ( eventual consistency )："}]},{"type":"text","value":" "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"弱一致性的殊殊形式"}]},{"type":"text","value":"，只要給定足夠的時間，所有資料更新終究都會被傳遞，且所有副本都會是一致的。"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"客戶端會現是等待最新資料的過程。"}]}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n在我們設計的系統中，\n"},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"為了高可用性"}]},{"type":"text","value":"，預設採用 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"最終一致性 ( eventual consistency )"}]},{"type":"text","value":" 模型，"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"即 AP 模式： "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"允許在短暫時間內副本之間數據不一致，但保證最終（在沒有新的更新後經過足夠時間）所有副本趨於一致。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這意味："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"系統在寫入時不強制所有副本立即同步成功即可返回成功（如採用 W < N），因此短期內不同節點可能讀到"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"舊值"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"系統在背景持續同步副本，或透過讀取修復機制，確保"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"最終"}]},{"type":"text","value":"各副本一致。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"最終一致性容忍暫時不一致"}]},{"type":"text","value":"，換取故障情況下仍可接受讀/寫請求（提高可用性）。例如 Dynamo、Cassandra 即採此模型。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"然而，最終一致性模型下，不可避免會出現"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"更新衝突"}]},{"type":"text","value":"的問題："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"當網路分區或並發寫入發生時，不同節點可能各自接受了對同一鍵的不同更新，導致系統存在多個版本的值。接下來我們將介紹如何檢測與解決這些衝突。"}]}]},{"type":"element","tag":"h3","props":{"id":"不一致問題的解決方式版本控制-versioning-與向量時鐘-vector-clock"},"children":[{"type":"text","value":"不一致問題的解決方式：版本控制 ( Versioning ) 與向量時鐘 ( Vector Clock )"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"複製：提高可用性，同時也導致副本間產生不一致的問題。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n因此，我們需要一個能夠偵測衝突與協調衝突的版本控制系統。"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"版本控制："}]},{"type":"text","value":" 把每次的資料修改，全都視為資料的一個全新不可變版本。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"向量時鐘："}]},{"type":"text","value":" 解決兩個版本衝突此類問題的常用技術。"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"版本衝突問題舉例："}]},{"type":"text","value":" 圖6-7 －＞ 圖6-8"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"有 2 個副本 n1 與 n2 具有相同 key=\"name\" 並且值相同為 \"john\" ，我們稱為原始值。 ( 圖 6-7 )\n"},{"type":"element","tag":"img","props":{"alt":"alt text","src":"/images/sdi-aig/06/img-6-7.png"},"children":[]}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"某刻 Client A 通過節點 n1 將 name 更新為值 \"johnSanFrancisco\""}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"同時 Client B 通過節點 n2 將 name 更新為值 \"johnNewYork\""}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"由於 A、B 幾乎"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"同時寫入"}]},{"type":"text","value":"，且"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"寫入不同節點"}]},{"type":"text","value":"。 2個副本各自被更新為"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"不同值"}]},{"type":"text","value":"。( 圖 6-8 )\n"},{"type":"element","tag":"img","props":{"alt":"alt text","src":"/images/sdi-aig/06/img-6-8.png"},"children":[]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"產生衝突版本："}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"key=\"name\" 產生兩個衝突值： v1（值=\"johnSanFrancisco\"）與 v2（值=\"johnNewYork\"）。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"這種情況下，單靠時間戳無法明確判斷哪個版本為「最新」或「正確」，因為兩次寫入發生在不同節點且近乎同時。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"解決衝突版本："}]}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"版本控制："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"定義："}]},{"type":"text","value":" 把每次的資料修改，全都視為資料的一個全新不可變版本。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"向量時鐘："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"為了解決"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"誰覆蓋誰"}]},{"type":"text","value":"的問題。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"為每個資料項維護一個多維版本向量，用來判定版本間的先後或並行關係。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"定義："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"向量時鐘是"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"與資料相關聯的一對資料"}]},{"type":"text","value":"，其形式為 "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"節點(伺服器), 版本"}]}]}]},{"type":"text","value":"。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"可用來檢查某個版本是否為"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"最新版本"}]},{"type":"text","value":"、是否為"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"成功的版本"}]},{"type":"text","value":"、或是否"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"與其他版本衝突"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"如 "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D"}]}]},{"type":"text","value":" 的向量時鐘可能為 "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D([S1, v1], [S2, v2], ... [Sn, vn])"}]}]},{"type":"text","value":" 。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"S1...Sn"}]}]},{"type":"text","value":" 是參與此資料項更新的節點ID"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"v1...vn"}]}]},{"type":"text","value":" 是該節點對此資料的更新次數。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"更新規則："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"每當資料 "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D"}]}]},{"type":"text","value":" 在某節點 "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Si"}]}]},{"type":"text","value":" 發生寫入\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"如果向量時鐘中已存在 "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"[Si, vi]"}]}]},{"type":"text","value":" ，則將 "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"vi"}]}]},{"type":"text","value":" 加一（該節點對此資料的版本號+1）。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"如果不存在 "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"[Si, vi]"}]}]},{"type":"text","value":"，則新增 "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"[Si, 1]"}]}]},{"type":"text","value":" 條目，表示該節點首次創建此資料版本。"}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"版本比較："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"將兩個版本的向量時鐘逐分量比較"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"如果 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"版本X"}]},{"type":"text","value":" 的每個節點計數都 <= "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"版本Y"}]},{"type":"text","value":" 的對應計數"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"版本X"}]},{"type":"text","value":" "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D(［S0, 1］, [S1, 1])"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"版本Y"}]},{"type":"text","value":" "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D(［S0, 1］, [S1, 2])"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"則 X 是 Y 的祖先版本（即 X 的所有更新都被 Y 包含，無衝突）。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"如果 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"版本X"}]},{"type":"text","value":" 的某幾個節點計數比 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"版本Y"}]},{"type":"text","value":" 的對應計數或大或小"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"版本X"}]},{"type":"text","value":" "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D(［S0, 1］, [S1, 2])"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"版本Y"}]},{"type":"text","value":" "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D(［S0, 2］, [S1, 1])"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"則 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"版本X"}]},{"type":"text","value":" 與 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"版本Y"}]},{"type":"text","value":" 發生"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"並行衝突"}]},{"type":"text","value":"（即各有部分更新彼此不包含）。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"目前的應用結論"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Amazon Dynamo 就成功在生產環境使用向量時鐘並未遇到不可控的時鐘膨脹問題。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"向量時鐘仍是實用解決方案。"}]}]}]}]}]}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"向量時鐘的缺點"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"透過以上機制，向量時鐘可以"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"避免隨意覆蓋"}]},{"type":"text","value":"並發寫入造成的數據丟失，保留所有衝突版本供合併。值得注意的是，向量時鐘也有缺點："}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"增加客戶端複雜度："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"需要客戶端（或應用層）實現衝突合併邏輯，對開發者提出更高要求。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"一些系統（如 Cassandra）乾脆選擇更簡單的 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"最後寫入優先 (Last Write Wins)"}]},{"type":"text","value":" 策略，以縮減實現複雜度，但代價是可能捨棄較新的並發更新。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"開銷隨節點數增加："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"向量時鐘裡 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"server:version"}]}]}]},{"type":"text","value":"  這樣成對資料，其數量可能會"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"快速成長"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"在大規模系統中，維護數十上百的節點版本向量"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"會增加存儲和傳輸負擔"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"針對長度設定了一個"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"門檻值"}]},{"type":"text","value":"。超過限制長度，就會"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"刪除掉最舊的成對資料"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"導致，無法正正確判斷前後代關系，造成重新協調效果不佳。"}]}]}]}]}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"舉例："}]},{"type":"text","value":"\n向量時鐘是用 "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D([S1, v1], [S2, v2], ... [Sn, vn])"}]}]},{"type":"text","value":" 來表式。\n"},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D"}]}]},{"type":"text","value":"  ：是資料項\n"},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Sn"}]}]},{"type":"text","value":" ：是伺服器編號"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"vn"}]}]},{"type":"text","value":" ：是版本計數器\n如果把資料項 "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D"}]}]},{"type":"text","value":" 寫入伺服器 "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Si"}]}]},{"type":"text","value":" , 則系統就必須執行以下其中一個任務。\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"如果  "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"[Si,vi]"}]}]},{"type":"text","value":" 存在， "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"vi"}]}]},{"type":"text","value":" 就加 1。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"否則的話，就建立一個新的項目 "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"[Si,1]"}]}]},{"type":"text","value":" 。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"透過向量時鐘，我們能"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"檢測"}]},{"type":"text","value":"衝突版本並進一步"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"合併"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"以下用實際例子 ( 圖 6-9 ) 說明其工作流程："},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"假設 N=3 節點 Sx, Sy, Sz"}]},{"type":"element","tag":"img","props":{"alt":"alt text","src":"/images/sdi-aig/06/img-6-9.png"},"children":[]}]}]}]}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"初始寫入："}]},{"type":"text","value":" （ "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Sx"}]},{"type":"text","value":" 第1次 寫入此鍵）\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"客戶端把資料項 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D1"}]},{"type":"text","value":" 寫入系統，且這個寫入是由伺服器 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Sx"}]},{"type":"text","value":" 來處理。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"因此，就有了向量時鐘為 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D1([Sx, 1])"}]},{"type":"text","value":"。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"後續覆寫："}]},{"type":"text","value":" （ "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Sx"}]},{"type":"text","value":" 第2次 更新此鍵，取代了舊版本）\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"另一客戶端讀取了最新的 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D1"}]},{"type":"text","value":" ，並把它改為 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D2"}]},{"type":"text","value":" ，仍然是由同一部伺服器 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Sx"}]},{"type":"text","value":" 進行寫入處理把資料寫回伺服器。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"因此，"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D2"}]},{"type":"text","value":" 繼承自 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D1"}]},{"type":"text","value":"，視為"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"同一演進鏈"}]},{"type":"text","value":"，故 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Sx"}]},{"type":"text","value":" 將其版本遞增為 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D2([Sx, 2])"}]},{"type":"text","value":"。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"並行更新1："}]},{"type":"text","value":" （繼承了之前 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Sx:2"}]},{"type":"text","value":" 的版本，"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"並加入 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Sy:1"}]}]},{"type":"text","value":" ）\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"第三個客戶端讀取最新 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D2"}]},{"type":"text","value":"，更新為 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D3"}]},{"type":"text","value":"，"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"透過"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"不同節點 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Sy"}]}]},{"type":"text","value":" 寫入。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Sy"}]},{"type":"text","value":" 不曾寫過該鍵，於是 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D3"}]},{"type":"text","value":" 的時鐘為 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"([Sx,2], [Sy,1])"}]},{"type":"text","value":"。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"並行更新2："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"第四個客戶端也"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"讀取 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D2"}]},{"type":"text","value":"（與步驟3並行）"}]},{"type":"text","value":"，更新為 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D4"}]},{"type":"text","value":"，"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"透過"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"另一節點 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Sz"}]}]},{"type":"text","value":" 寫入。得到 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D4"}]},{"type":"text","value":" 的時鐘 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"([Sx,2], [Sz,1])"}]},{"type":"text","value":"。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"衝突產生："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"現在系統內存在 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D3"}]},{"type":"text","value":" 和 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D4"}]},{"type":"text","value":" 兩條"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"平行分支"}]},{"type":"text","value":"（皆從 D2 演化而來）。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D3"}]},{"type":"text","value":" 的時鐘 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"[Sx:2, Sy:1]"}]},{"type":"text","value":" 與"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D4"}]},{"type":"text","value":" 的時鐘 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"[Sx:2, Sz:1]"}]},{"type":"text","value":" 互相無法比較誰包含誰（各自有對方沒有的分量），判斷為"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"衝突版本"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"此時若有讀取請求，\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"系統會"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"同時返回 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D3"}]},{"type":"text","value":" 和 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D4"}]},{"type":"text","value":" 兩個版本"}]},{"type":"text","value":"給客戶端。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"要求客戶端執行"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"應用層合併"}]},{"type":"text","value":"（例如將兩個購物車列表合併）後提交一個最"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"終版本 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D5([Sx,3], [Sy,1], [Sz,1])"}]}]},{"type":"text","value":"。"}]}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"衝突合併："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"客戶端解析衝突得到最終結果，再寫入系統（假設透過 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Sx"}]},{"type":"text","value":" ）。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Sx"}]},{"type":"text","value":" 將合併版本 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D5"}]},{"type":"text","value":" 的時鐘更新為 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"([Sx,3], [Sy,1], [Sz,1])"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"因為 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D5"}]},{"type":"text","value":" 包含了之前 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D3"}]},{"type":"text","value":"、"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D4"}]},{"type":"text","value":" 的所有分量（ "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Sx:3 ≥2, Sy:1 ≥1, Sz:1 ≥1"}]},{"type":"text","value":" ），"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"因此 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D5"}]},{"type":"text","value":" 被視為"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"後繼版本"}]},{"type":"text","value":"，舊的 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D3"}]},{"type":"text","value":"、"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"D4"}]},{"type":"text","value":" 可被標記為過時並最終刪除。"}]}]}]}]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":"html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"整體章節重點-birdeye-view","depth":2,"text":"整體章節重點 (Bird‑Eye View)"},{"id":"本章要求","depth":2,"text":"本章要求"},{"id":"session1-從零開始認識-keyvalue-store","depth":2,"text":"Session 1 ： 從零開始認識 Key‑Value Store"},{"id":"session2-單機設計-vs-分散式挑戰","depth":2,"text":"Session 2 ： 單機設計 v.s. 分散式挑戰","children":[{"id":"單一伺服器的鍵值儲存系統","depth":3,"text":"單一伺服器的鍵值儲存系統："},{"id":"分散式鍵值儲存系統","depth":3,"text":"分散式鍵值儲存系統："}]},{"id":"session3-鍵值儲存系統的構成元素","depth":2,"text":"Session 3 ： 鍵值儲存系統的構成元素","children":[{"id":"資料分區一致性雜湊與水平擴充","depth":3,"text":"資料分區：一致性雜湊與水平擴充"},{"id":"資料複製高可用性的基石","depth":3,"text":"資料複製：高可用性的基石"},{"id":"一致性quorum-機制與最終一致性","depth":3,"text":"一致性：Quorum 機制與最終一致性"},{"id":"不一致問題的解決方式版本控制-versioning-與向量時鐘-vector-clock","depth":3,"text":"不一致問題的解決方式：版本控制 ( Versioning ) 與向量時鐘 ( Vector Clock )"}]}]}},"_type":"markdown","_id":"content:7.sdi-aig:6.chapter6.md","_source":"content","_file":"7.sdi-aig/6.chapter6.md","_extension":"md"}