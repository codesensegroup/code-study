{"_path":"/cicd-2.0/chapter10","_dir":"cicd-2.0","_draft":false,"_partial":false,"_locale":"","title":"10 自動化測試策略與方法","description":"","pageTitle":"Chapter 10 自動化測試策略與方法","contributors":["hdsbook","BackPOPO"],"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"前言"},"children":[{"type":"text","value":"前言"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"想發揮持續整合的真正作用，一個至關重要的部分就是自動化測試策略。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"本章主要討論軟體進入生產環境之前的 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"「自動化測試管理」"}]},{"type":"text","value":" ，包含："}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"自動化測試的定位：\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"包含哪些測試，怎麼分類？"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"哪些可以被自動化？"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"本章節主要探討哪些測試？"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"傳統自動化測試的困境：\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"過去常見的一種自動化測試策略模式，它哪些問題？"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"作為良好自動化測試的一個反例"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"如何實踐良好的自動化測試\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"自動化測試的分層"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"測試案例的管理、從何開始做自動化測試…"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"_101-自動化測試的自身定位"},"children":[{"type":"text","value":"10.1 自動化測試的自身定位"}]},{"type":"element","tag":"h3","props":{"id":"測試領域的4類活動"},"children":[{"type":"text","value":"測試領域的4類活動"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"「問題認知」：對業務問題本身的理解與認識 (了解測試的目標是什麼)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"「分析」：分析、設計測試流程或實作測試程式碼 (以最低的測試成本，達到驗證的目標)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"「執行」：執行測試，得到測試結果數據"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"「決策」：根據測試結果進行下一步行動判斷"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"其中的「執行」存在大量重複性勞動，自動化測試能夠降低此成本"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"回歸測試：重複執行以前的全部或部分相同的測試工作\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"確保過去開發的功能服務都有正常運作"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"產品生命週期越長，回歸測試案例庫就越大，回歸測試的工作負擔越重"}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"brian-marick-測試4象限"},"children":[{"type":"text","value":"Brian Marick 測試4象限"}]},{"type":"element","tag":"alert","props":{},"children":[{"type":"text","value":"\n有很多不同的測試，如何分類？哪些測試可以被自動化？\n"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"測試四象限","src":"/code-study/images/cicd-2.0/10/10-1-%E6%B8%AC%E8%A9%A6%E5%9B%9B%E8%B1%A1%E9%99%90.png"},"children":[]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"四個面向\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"面向業務專家：能與業務專家無障礙溝通 (ex: PM、使用者)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"面向技術人員：易與技術人員達成共識 (ex: 開發工程師)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"支持編程：目標是為了幫助研發團隊檢查功能需求是否開發完成 (ex: 功能性和UI是否一致)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"評判項目：目標是為了找出產品是否有缺限 (ex: 產品是否滿足客戶的實際需求)"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"四個象限\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"第一象限：(手動) 用戶演示demo、可用性測試、探索性測試"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"第二象限："},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"(自動化)"}]},{"type":"text","value":" 功能驗收測試 => 以用戶的角度"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"第三象限："},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"(自動化)"}]},{"type":"text","value":" 系統集成測試、組件測試、單元測試 => 系統角度，技術實現的驗證"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"第四象限：(自動化/手動) 非功能驗收測試(性能測試、容量測試、可靠性測試…)"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"本章主要討論第二、第三象限的自動化測試"}]}]},{"type":"element","tag":"h3","props":{"id":"_1011-自動化測試的優勢"},"children":[{"type":"text","value":"10.1.1 自動化測試的優勢"}]},{"type":"element","tag":"alert","props":{},"children":[{"type":"text","value":"\n相較於手動測試，自動化測試有哪些優勢"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n(機械自動化 v.s. 人的手動執行)\n"}]},{"type":"element","tag":"h4","props":{"id":"減少失誤率提高準確性"},"children":[{"type":"text","value":"「減少失誤率，提高準確性」:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"機械不受情緒、經驗的影響，每次執行都重覆相同的動作並紀錄詳細的結果"}]}]},{"type":"element","tag":"h4","props":{"id":"節省時間和執行成本"},"children":[{"type":"text","value":"「節省時間和執行成本」"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"在長生命週期、發佈頻率高的產品中，時間成本的節省相當明顯"}]}]},{"type":"element","tag":"h4","props":{"id":"提升測試覆蓋度"},"children":[{"type":"text","value":"「提升測試覆蓋度」:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"自動化測試可以增加測試的深度和範圍，以提高軟件質量"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ex: 內存使用、內部程序狀態…"}]}]},{"type":"element","tag":"h4","props":{"id":"做手動無法完成的測試"},"children":[{"type":"text","value":"「做手動無法完成的測試」:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"手動測試難做到如摸擬成千上萬個虛擬用戶同時間與軟體進行互動 (mock)"}]}]},{"type":"element","tag":"h4","props":{"id":"為開發人員提高質量反饋速度"},"children":[{"type":"text","value":"「為開發人員提高質量反饋速度」:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"讓開發人員可以方便的執行，快速發現問題"}]}]},{"type":"element","tag":"h4","props":{"id":"提高團隊士氣"},"children":[{"type":"text","value":"「提高團隊士氣」:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"讓團隊可以將時間花在更具挑戰性和更有價值的活動中"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ex: 探索性測試"}]}]},{"type":"element","tag":"h3","props":{"id":"_1012-自動化測試所需的投入"},"children":[{"type":"text","value":"10.1.2 自動化測試所需的投入"}]},{"type":"element","tag":"alert","props":{},"children":[{"type":"text","value":"\n事物都具有兩面性，自動化測試帶來收益的同時，也會產生成本\n"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"成本"}]},{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"說明"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"工具投入成本"}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"測試工具、測試框架的研究與培訓"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"測試案例維護成本"}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"功能調整的同時，需維護相對應的測試案例"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"專業技能人員的成本"}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"測試編程、設計規劃的經驗、培訓"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"設備資源的投入"}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"自動化測試無法完全替代手動測試"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"保留手動測試所需的測試環境，也要為自動化測試的執行準備相應的測試環境"}]}]}]}]},{"type":"element","tag":"h4","props":{"id":"手動測試與自動化測試的不同"},"children":[{"type":"text","value":"手動測試與自動化測試的不同"}]},{"type":"element","tag":"alert","props":{},"children":[{"type":"text","value":"\n自動化測試有很多優勢，但手動測試依舊不可完全被取代\n"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n為什麼？兩者的本質上有哪些不同？\n"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"自動化測試"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"無主觀意識，它只做腳本要求它做的事"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"比較沒有無主動觀察、主動認知和分析的能力，沒有創造力"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"擅長回答：系統是否照我們「預先設計」的方式正確運行？"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ex: 用戶功能驗收測試"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"手動測試"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"有人為主觀意識的介入"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"具主動觀察、學習、分析、創造力"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"擅長回答：我們是否正在開發一個正確的，滿足用戶期望的軟體系統？"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ex: 探索性測試"}]}]}]}]},{"type":"element","tag":"h4","props":{"id":"自動化測試與手動測試的成本收益對比示意圖"},"children":[{"type":"text","value":"自動化測試與手動測試的成本收益對比示意圖"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"自動化測試與手工測試的成本收益對比示意圖","src":"/code-study/images/cicd-2.0/10/10-2-%E8%87%AA%E5%8B%95%E5%8C%96%E6%B8%AC%E8%A9%A6%E8%88%87%E6%89%8B%E5%B7%A5%E6%B8%AC%E8%A9%A6%E7%9A%84%E6%88%90%E6%9C%AC%E6%94%B6%E7%9B%8A%E5%B0%8D%E6%AF%94%E7%A4%BA%E6%84%8F%E5%9C%96.png"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"_102-突破傳統自動化測試的困境"},"children":[{"type":"text","value":"10.2 突破傳統自動化測試的困境"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"自動化測試常作為提測前的檢驗標準 (提交給手動測試之前，先運行自動化測試案例)"}]}]},{"type":"element","tag":"h3","props":{"id":"傳統自動化測試的創建流程"},"children":[{"type":"text","value":"傳統自動化測試的創建流程"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"10-3-傳統自動化測試流程","src":"/code-study/images/cicd-2.0/10/10-3-%E5%82%B3%E7%B5%B1%E8%87%AA%E5%8B%95%E5%8C%96%E6%B8%AC%E8%A9%A6%E6%B5%81%E7%A8%8B.png"},"children":[]}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"測試分析者 => 分析測試案例，並文檔化(撰寫測試流程的文檔)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"測試執行者 => 照測試流程文件執行手動測試，發現BUG向開發人員報告"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"開發人員   => 修復bug"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"測試執行者 => 再次執行測試，直至驗證通過"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"測試分析者 => 從測試案例文檔中選出一些重要且變動可能性較小的測試案例"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"自動化測試開發者 => 對挑選出來的測試案例編寫自動化腳本，並歸入自動化回歸測試庫"}]}]},{"type":"element","tag":"h3","props":{"id":"_1021-傳統自動化測試的特點"},"children":[{"type":"text","value":"10.2.1 傳統自動化測試的特點"}]},{"type":"element","tag":"h4","props":{"id":"_1-測試案例執行成本過高"},"children":[{"type":"text","value":"1. 測試案例執行成本過高"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"處理流程較長、要準備的測試案例較多，需花費較多時間、精力"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"多為黑盒自動化測試案例，摸擬真實用戶的介面操作來驅動的系統集成測試"}]}]},{"type":"element","tag":"h4","props":{"id":"_2-自動化測試執行頻率低"},"children":[{"type":"text","value":"2. 自動化測試執行頻率低"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"通常是在軟件開發完後(提測階段)、或系統回歸測試(重覆以前全部或部份的測試工作)用"}]}]},{"type":"element","tag":"h4","props":{"id":"_3-質量反饋滯後"},"children":[{"type":"text","value":"3. 質量反饋滯後"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"大部份的測試案例是回歸測試案例，無法對當前正在開發的新功能進行測試"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"為了能安全執行，經常會通過 sleep 指令讓流程暫停，再繼續下一流程，因此很耗時"}]}]},{"type":"element","tag":"h4","props":{"id":"_4-測試環境準備成本高"},"children":[{"type":"text","value":"4. 測試環境準備成本高"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"完善的測試數據集"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"整套的運行環境"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"測試環境的搭建手動操作較多，甚至需要多人的參與"}]}]},{"type":"element","tag":"h4","props":{"id":"_5-測試結果可性度低"},"children":[{"type":"text","value":"5. 測試結果可性度低"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"受機械硬體配置、網路狀況、案例處理時間長度等影響，可能會產生隨機失敗"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"若界面需求的改動沒有即時通知測試團隊對測試進行修改，也會造成測試失敗"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"這些失敗都會造成團隊可能會更傾向於忽略這些自動化測試案例的存在"}]}]},{"type":"element","tag":"h4","props":{"id":"_6-人員依賴性強"},"children":[{"type":"text","value":"6. 人員依賴性強"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"編寫自動化測試案例很大程度依賴少數測試開發專職人員"}]}]},{"type":"element","tag":"h4","props":{"id":"適合傳統自動化測試的團隊"},"children":[{"type":"text","value":"適合傳統自動化測試的團隊"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"適合用于發佈版本週期較長，使用傳統瀑布開發方法的團隊"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"現代軟件版本迭代速度越來越快，這種自動化測試案例的投資回報率越來越低"}]}]},{"type":"element","tag":"h4","props":{"id":"名詞解釋"},"children":[{"type":"text","value":"名詞解釋："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"黑箱測試(ex: 功能驗收測試)\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"把測試軟件當成黑箱，不在乎內部的實作，只在乎輸入輸出結果是否正確"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"根據用戶說明書、需求文檔，去進行操作、輸入測試"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"優點：站在用戶的立場進行測試"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"缺點：無法對程序內部特定的內容進行測試"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"白箱測試(ex: 單元測試)\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"把軟體當成透明的盒子，在乎程式內部的運行邏輯，對其結構進行測試"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"優點：對程式內部的問題進行覆蓋(盡量作到能夠覆蓋到每一行原碼中)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"缺點：無法檢驗程式外部的特徵，也無法站在用戶的角度進行測試"}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"_1022-自動化測試的分層"},"children":[{"type":"text","value":"10.2.2 自動化測試的分層"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"本章聚焦的測試類型為\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"「用戶驗收測試」(用戶角度) 第二象限"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"「系統集成測試」(系統角度) 第三象限"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"傳統自動化測試方式產生的測試案例類型通常偏上層測試\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"形成測試捲筒冰淇淋 (頭重腳輕) => 不利於持續整合\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"被測範圍較大：執行時間成本、準備成本都很高"}]}]}]}]}]}]},{"type":"element","tag":"h4","props":{"id":"測試捲筒冰淇淋"},"children":[{"type":"text","value":"測試捲筒冰淇淋"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"10-4-測試類別與被測對象範圍的對應關係.png","src":"/code-study/images/cicd-2.0/10/10-4-%E6%B8%AC%E8%A9%A6%E9%A1%9E%E5%88%A5%E8%88%87%E8%A2%AB%E6%B8%AC%E5%B0%8D%E8%B1%A1%E7%AF%84%E5%9C%8D%E7%9A%84%E5%B0%8D%E6%87%89%E9%97%9C%E4%BF%82.png"},"children":[]}]},{"type":"element","tag":"h4","props":{"id":"快捷時信"},"children":[{"type":"text","value":"「快、捷、時、信」"}]},{"type":"element","tag":"alert","props":{},"children":[{"type":"text","value":"\n良好的自動化測試實踐，應該要「快、捷、時、信」\n"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"項目"}]},{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"說明"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"快速"}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"測試案例的執行速度要快"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"(持續整合的要求是，最好在十分鐘以內，不要超過15分鐘)"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"便捷"}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"每名工程師都可方便執行測試，不會影響到他人"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"及時"}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"一但功能發生變化，就能馬上告知本次代碼變更對軟體質量的影響 "},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"(若沒有一直開發新測試案例對新功能即時驗證，會導至反饋速度的降低)"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"可信"}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"不存在隨機失敗的現象。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"持續整合實踐要求一但自動化測試案例失敗，必須立即修復"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"隨機失敗會大大增加工程師的無效投入，並降低工程師對持續整合的信心"}]}]}]}]},{"type":"element","tag":"alert","props":{},"children":[{"type":"text","value":"\n透過傳統自動化測試的方式，能達到快、捷、時、信嗎？(困難)"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n快 => 降低時間成本"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n信 => 提高穩定性\n"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"開發上層測試案例成本較高，穩定性差\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"被測對象範圍較大，測資準備工作量大，執行時間久"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"有外部依賴，不穩定性也高"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"降低成本：\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"減少上層測試案例數量"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"增加下層測試案例數量"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"形成穩定的正三角形"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"10-5-測試金字塔.png","src":"/code-study/images/cicd-2.0/10/10-5-%E6%B8%AC%E8%A9%A6%E9%87%91%E5%AD%97%E5%A1%94.png"},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"_1023-不同類型的測試金字塔"},"children":[{"type":"text","value":"10.2.3 不同類型的測試金字塔"}]},{"type":"element","tag":"alert","props":{},"children":[{"type":"text","value":"\n軟體架構發展的趨勢朝「服務化」和「微服務化」發展"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":" \n掀起大規模分散式應用服務浪潮\n"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"服務化：軟體服務由「單體應用架構」拆分成「服務導向的架構(SOA)」\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"服務之間透過RPC等方式進行溝通(RPC：Remote Procedure Call, 遠端過程呼叫)"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"微服務化：服務導向架構 => 微服務架構/微核架構\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"後台服務化模組被拆分成很多的微服務 (微服務架構)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"客戶端軟體向元件化或微核架構發展   (微核架構)"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"10-8-微核架構與微服務架構示意圖","src":"/code-study/images/cicd-2.0/10/10-8-%E5%BE%AE%E6%A0%B8%E6%9E%B6%E6%A7%8B%E8%88%87%E5%BE%AE%E6%9C%8D%E5%8B%99%E6%9E%B6%E6%A7%8B%E7%A4%BA%E6%84%8F%E5%9C%96.png"},"children":[]}]},{"type":"element","tag":"h4","props":{"id":"_1-微核架構的測試金字塔"},"children":[{"type":"text","value":"1. 微核架構的測試金字塔"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"10-9-微核架構的測試金字塔","src":"/code-study/images/cicd-2.0/10/10-9-%E5%BE%AE%E6%A0%B8%E6%9E%B6%E6%A7%8B%E7%9A%84%E6%B8%AC%E8%A9%A6%E9%87%91%E5%AD%97%E5%A1%94.png"},"children":[]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"端到端自動化測試\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"「摸擬介面操作」"}]},{"type":"text","value":" 來驅動的自動化測試"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"API自動化測試\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"UI層之下， "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"「透過API介面」"}]},{"type":"text","value":" 來驅動下層業務邏輯的自動化測試"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"元件或外掛間服務的介面自動化測試\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"「兩個或兩個以上元件(外掛)間」"}]},{"type":"text","value":" 的功能正確性"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"元件測試\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"對 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"「單個元件或框架」"}]},{"type":"text","value":" 本身進行品質驗證"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"自動化單元測試\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"最細粒度的自動化測試"}]}]}]}]},{"type":"element","tag":"h4","props":{"id":"_2-微服務架構的測試金字塔"},"children":[{"type":"text","value":"2. 微服務架構的測試金字塔"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"10-10-微服務架構的測試金字塔","src":"/code-study/images/cicd-2.0/10/10-10-%E5%BE%AE%E6%9C%8D%E5%8B%99%E6%9E%B6%E6%A7%8B%E7%9A%84%E6%B8%AC%E8%A9%A6%E9%87%91%E5%AD%97%E5%A1%94.png"},"children":[]}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"單元測試："},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"測試目標：驗證 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"「業務邏輯單元」"}]},{"type":"text","value":" 的正確性，不在乎上層程式要實作什麼功能"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"什麼是單元？\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"軟體中最小可測業務邏輯單元 (一個函式、一個Class)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"對外部依賴(如檔案系統、網路等)比較少"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"測試運行時不需系統處於執行狀態"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"測試運行速度快"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"業務元件或服務測試"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"測試目標：驗證 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"「單個元件或服務」"}]},{"type":"text","value":" 的行為是否符合設計預期"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"什麼是元件？\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"由多個最小業務邏輯單元組成"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"可能與本系統「內部」的其它元件互動，也可能負責與「外部」整合點進行互動"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ex: GoCD 中的類別 MaterialService，就是負責與Git或Subversion打交道的一個元件"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"測試通常不需要系統處於執行狀態，但可能涉及外部依賴(檔案系統、網路、資料庫等)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"執行進度可能比單元測試稍慢"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"契約測試，又稱消費者驅動的契約測試(consumer driven contracts test)"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"測試目標："},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"「兩個服務之間」"}]},{"type":"text","value":" 的契約\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"測試消費者介面與服務者介面之間的正確性"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"驗證服務者提供的資料是否為消費者所需要的"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"契約：指軟體系統中各個服務間互動的資料標準格式"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"10-11-服務間的契約","src":"/code-study/images/cicd-2.0/10/10-11-%E6%9C%8D%E5%8B%99%E9%96%93%E7%9A%84%E5%A5%91%E7%B4%84.png"},"children":[]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"業務工作流測試"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"測試目標：驗證 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"「多個被測服務」"}]},{"type":"text","value":" 之間是否可以正常工作，達成某一業務請求"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"啟動執行兩個以上的微服務，進行業務流程上的測試"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"端到端測試"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"對 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"「整個軟體服務」"}]},{"type":"text","value":" 的流程進行測試\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"模擬用戶在可視化介面上執行各種操作"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"若軟體服務對外提供非可視介面的服務(如API呼叫)，這類測試也歸屬端到端測試"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"從用戶的角度驗證整個功能的準確性和可用性"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"不關注某一細小功能的實作"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"_103-自動化測試的實施策略"},"children":[{"type":"text","value":"10.3 自動化測試的實施策略"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"考慮自動化測試案例的成本，為了更好的投資報酬率，需要更聰明地啟動自動化測試實踐"}]}]},{"type":"element","tag":"h3","props":{"id":"_1031-增加自動化測試案例的著手點"},"children":[{"type":"text","value":"10.3.1 增加自動化測試案例的著手點"}]},{"type":"element","tag":"h4","props":{"id":"_1-針對代碼熱區補充自動化測試案例"},"children":[{"type":"text","value":"1. 針對代碼熱區補充自動化測試案例"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"程式碼熱區\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"程式碼變動頻率相對較高"}]},{"type":"text","value":" 的檔案或函數"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"經常出問題"}]},{"type":"text","value":" 的功能元件"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"若非程式碼熱區，說明執行穩定，編寫自動化測試的投報率較低"}]}]}]}]},{"type":"element","tag":"h4","props":{"id":"_2-跟隨新功能開發的進度"},"children":[{"type":"text","value":"2. 跟隨新功能開發的進度"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"給目前的功能開發提供即時的品質回饋"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"若只是在補充原有功能的自動化測試案例，無法即時發揮保護網的作用"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"多數自動化測試案例由開發工程師自行負責編寫\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"若同一功能由一人開發，一人編寫測試，就會產生溝通成本\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"(傳統自動化測試的缺點)"}]}]}]}]}]}]},{"type":"element","tag":"h4","props":{"id":"_3-從測試金字塔的中間層向上下兩端擴展"},"children":[{"type":"text","value":"3. 從測試金字塔的中間層向上下兩端擴展"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"上層開發成本高，下層單元測試覆蓋率小，中間投報率最好"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ex: 採用微服務架構的服務端軟體 => 從契約層開始著手"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ex: 手機端APP(微核架構) => 從元件級或API級的測試開始入手"}]}]},{"type":"element","tag":"h4","props":{"id":"_4-自動化測試案例的質量比數量重要"},"children":[{"type":"text","value":"4. 自動化測試案例的質量比數量重要"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"在能達到「驗證品質目的」的前提下，自動化測試的案例越少越好 (降低成本)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"「在實作成本最低的測試層級上，進行相應業務邏輯的測試」"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"不要在不同層級的測試(如單元測試層和元件測試層)中，針對相同的邏輯編寫測試案例"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"數量夠就好，絕不寫不必要的測試程式碼"}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"_1032-提高自動化測試的執行次數"},"children":[{"type":"text","value":"10.3.2 提高自動化測試的執行次數"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"測試執行次數越多 => 成本越低、獲益越高"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"如何提高執行次數？"}]}]},{"type":"element","tag":"h4","props":{"id":"_1-共享自動化測試案例-測試可以被反覆利用甚至自動化"},"children":[{"type":"text","value":"1. 共享自動化測試案例 (測試可以被反覆利用，甚至自動化)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"反例：\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"測試只保存在自己的電腦中"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"測試只能在自己的環境中執行"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"測試案例無法針對不同環境(如測試環境、預生產環境)進行適配"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"正例：\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"將自動化測試案例放到團隊的程式碼倉庫中"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"整合到持續部署流水線中自動執行"}]}]}]}]},{"type":"element","tag":"h4","props":{"id":"_2-開發人員是自動化測試的第一用戶"},"children":[{"type":"text","value":"2. 開發人員是自動化測試的第一用戶"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"每個開發人員，隨時都能非常方便地執行自動化測試案例\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"將自動化測試作為開發人員日常開發中的一張品質保護網"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"而非測試人員用來驗收開發人員工作成果的工具"}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"_1033-良好自動化測試的特徵"},"children":[{"type":"text","value":"10.3.3 良好自動化測試的特徵"}]},{"type":"element","tag":"h4","props":{"id":"_1-案例之間必須相互獨立"},"children":[{"type":"text","value":"1. 案例之間必須相互獨立"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"案例間若存在順序依賴\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"就只能線性執行"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"執行時間拉長，回饋效率降低"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"搜尋失敗原因難度提高"}]}]}]}]},{"type":"element","tag":"h4","props":{"id":"_2-測試案例的運行結果必須穩定"},"children":[{"type":"text","value":"2. 測試案例的運行結果必須穩定"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"不穩定的測試案例只會提供錯誤的品質訊號，浪費團隊的時間"}]}]},{"type":"element","tag":"h4","props":{"id":"_3-測試案例的運行速度必須快"},"children":[{"type":"text","value":"3. 測試案例的運行速度必須快"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"將一個測試案例分解成多個獨立的測試案例，每個案例僅測原測試案例的一部份\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"=> 平行執行"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"「等待」改為「輪詢」，以很小的時間間隔不斷查詢是否到達下一步執行的狀態\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"=> polling 取代 sleep"}]}]}]}]},{"type":"element","tag":"h4","props":{"id":"_4-測試環境應該統一-最大化測試案例共享的獲益"},"children":[{"type":"text","value":"4. 測試環境應該統一 (最大化測試案例共享的獲益)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"反例：測試只能在某測試環境上執行，甚至只能在某開發人員的開發機器上執行"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"想辦法讓大家的測試環境統一或是讓測試能適配不同的環境"}]}]},{"type":"element","tag":"h3","props":{"id":"_1034-共享自動化測試的維護職責"},"children":[{"type":"text","value":"10.3.4 共享自動化測試的維護職責"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"自動化測試也是軟體程式碼，應花費時間心力使其易於維護，避免程式碼腐爛"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"自動化測試應盡可能與生產程式碼同步變化\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"沒有同步變化，執行就會失敗"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"當執行自動化測試失敗後，就應該馬上進行修改"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"(可能是功能出錯，也可能是測試需要修改)"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"「破窗效應」：\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"犯罪學理論：\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"環境中的不良現象如果被放任存在，會誘使人們仿效，甚至變本加厲"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"一個廢棄的房子出現了一個破窗沒人理，久了就會越多，甚至出現塗鴉"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"越來越多測試失敗卻沒有受到關注，久了就對自動化測試的結果視而不見"}]}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"_1035-程式碼測試覆蓋率"},"children":[{"type":"text","value":"10.3.5 程式碼測試覆蓋率"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"有人認為它是非常有用的指標\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"應該要求達到一定比例的測試覆蓋度"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"有人認為它是有用的工具，但它\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"只能告訴你「哪些程式碼缺乏測試案例覆蓋」"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"卻無法證明「被覆蓋的程式碼就一定是真正經過良好驗證的程式碼」"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"提供一種錯誤的安全感"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Google公司並沒有規定測試覆蓋率的統一標準，只有一個建議性標準：\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"單元測試覆蓋率達到85%"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Facebook於2004年剛上線時也沒寫自動化測試\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"業務發展快速、工程師數量大幅增加"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"交付品質變差、開發人員常常處於救火狀態"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"2008年始，Facebook正式引入自動化測試實踐"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Facebook 也無統一規定要寫多少自動化測試"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Facebook 公司中，自動化測試案例的大多數由開發工程師自己負責"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"10-12-谷歌公司2014年自動化測試覆蓋率統計圖","src":"/code-study/images/cicd-2.0/10/10-12-%E8%B0%B7%E6%AD%8C%E5%85%AC%E5%8F%B82014%E5%B9%B4%E8%87%AA%E5%8B%95%E5%8C%96%E6%B8%AC%E8%A9%A6%E8%A6%86%E8%93%8B%E7%8E%87%E7%B5%B1%E8%A8%88%E5%9C%96.png"},"children":[]},{"type":"element","tag":"img","props":{"alt":"10-13-谷歌公司不同編程語言的測試覆蓋率統計","src":"/code-study/images/cicd-2.0/10/10-13-%E8%B0%B7%E6%AD%8C%E5%85%AC%E5%8F%B8%E4%B8%8D%E5%90%8C%E7%B7%A8%E7%A8%8B%E8%AA%9E%E8%A8%80%E7%9A%84%E6%B8%AC%E8%A9%A6%E8%A6%86%E8%93%8B%E7%8E%87%E7%B5%B1%E8%A8%88.png"},"children":[]},{"type":"element","tag":"img","props":{"alt":"10-14-2008-2012年Facebook自動化測試案例的增長趨勢","src":"/code-study/images/cicd-2.0/10/10-14-2008-2012%E5%B9%B4Facebook%E8%87%AA%E5%8B%95%E5%8C%96%E6%B8%AC%E8%A9%A6%E6%A1%88%E4%BE%8B%E7%9A%84%E5%A2%9E%E9%95%B7%E8%B6%A8%E5%8B%A2.png"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"_104-用戶驗收自動化測試要點"},"children":[{"type":"text","value":"10.4 用戶驗收自動化測試要點"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"用戶驗收自動化測試處於自動化測試金字塔的最高層，成本最高"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"開發更多用戶驗收測試前，必須精心準備，以便以較低的成本持續維護比較健康的測試案例集"}]}]},{"type":"element","tag":"h3","props":{"id":"_1041-先搭建分層框架"},"children":[{"type":"text","value":"10.4.1 先搭建分層框架"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"先選擇適合專案的測試框架，做一定的調整"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"產生腳本程式後，進行測試腳本程式的分層重構"}]}]},{"type":"element","tag":"h4","props":{"id":"_1-測試案例的描述層"},"children":[{"type":"text","value":"1. 測試案例的描述層"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"test case 描述"}]}]},{"type":"element","tag":"h4","props":{"id":"_2-測試案例的實現層"},"children":[{"type":"text","value":"2. 測試案例的實現層"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"實作 test case"}]}]},{"type":"element","tag":"h4","props":{"id":"_3-測試案例的接口層介面層"},"children":[{"type":"text","value":"3. 測試案例的接口層(介面層)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"把 test case 中 可以重用的東西提取出來"}]}]},{"type":"element","tag":"h3","props":{"id":"_1042-測試案例應保持低位案例數應保持少量低成本"},"children":[{"type":"text","value":"10.4.2 測試案例應保持低位(案例數應保持少量，低成本)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"測試案例數量不應太多"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"focus在驗證軟體服務的核心工作流程"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"實作細節可交由下層的自動化測試案例來覆蓋"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ex: 驗證系統登入行為時\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"驗證目標主要在驗證整個登錄流程是否得到正確執行"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"而不是驗證輸入資訊是否非法"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"後者可透過更低層次的自動化測試案例來覆蓋"}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"_1043-為自動化測試案例預留api"},"children":[{"type":"text","value":"10.4.3 為自動化測試案例預留API"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"少用模擬圖形介面操作的程式碼\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"介面操作反應慢"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"可能會有不容易定位，或執行不穩定的情況"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"盡量呼叫位於介面下層的API來驅動業務流程的執行"}]}]},{"type":"element","tag":"h3","props":{"id":"_1045-測試數據的準備"},"children":[{"type":"text","value":"10.4.5 測試數據的準備"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"通過一些規則，編寫程序自動生成數據(當規則複雜時，較難編寫程序)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"通過錄制手工測試時產生的數據"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"將生產環境的非敏感數據克隆一份，或截取一個片段"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"進行生產環境數據的自動化錄制，並保存備份"}]}]},{"type":"element","tag":"h2","props":{"id":"_105-其他質量檢查方法"},"children":[{"type":"text","value":"10.5 其他質量檢查方法"}]},{"type":"element","tag":"h3","props":{"id":"_1051-差異批注測試方法"},"children":[{"type":"text","value":"10.5.1 差異批注測試方法"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"一種半自動測試方法\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"當做預定義的數據集輸入系統后，收集運行后的輸出結果，對其中需要驗證的數據進行提取，並將提取結果放入文本檔中，通過對比前後兩次測試的結果，用人工批注的方式進行半自動測試。 需要特別注意動態信息(日期時間)的處理，常見的工具包括TextTest和ApprovalTests等。"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"10-15-差異批注測試方法示意圖","src":"/code-study/images/cicd-2.0/10/10-15-%E5%B7%AE%E7%95%B0%E6%89%B9%E6%B3%A8%E6%B8%AC%E8%A9%A6%E6%96%B9%E6%B3%95%E7%A4%BA%E6%84%8F%E5%9C%96.png"},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"_1052-代碼規範檢查與代碼動靜態檢測"},"children":[{"type":"text","value":"10.5.2 代碼規範檢查與代碼動靜態檢測"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"代碼風格規範檢查："}]},{"type":"text","value":" 是指通過工具 ，依據團隊定義的一些代碼編寫規範，針對源代碼進行檢查，如發現破壞規範的代碼，就加以指正。"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"工具常用的有 Checkstyle、PMD、SonarQube 等。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"增強代碼的可讀性和易維護性。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Google 工程師在做代碼評審時，對代碼可讀性要求就非常嚴格。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"代碼動靜態檢測："}]},{"type":"text","value":" 通過一些工具對產品原始程式碼進行自動化掃描，發現代碼中存在的問題或潛在風險。"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"靜態掃描："}]},{"type":"text","value":" 寫好源代碼後，無須經過編譯器編譯，而直接使用一些掃描工具對進行掃描，找出代碼中存在的一些語義缺陷、安全漏洞的解決方案。"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"常用的工具包括：lint，Coverity，ColcWork等。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"動態分析："}]},{"type":"text","value":" 通過在真實或虛擬處理機器上執行目標程序進行分析，比如，在可能的漏洞處插入專門編製的故障發生函數，迫使目標軟體產生異常，然後通過監控程式來檢查是否發生了邊界溢出或者其他異常現象。"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"常用工具包括：Valgrind，Purify等。"}]}]}]}]},{"type":"element","tag":"alert","props":{},"children":[{"type":"text","value":"\n  當代碼庫的規模較大時，這種質量掃描工作可能會花費較長時間。\n"},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"應該在提交構建之前，提供增量掃描的方式。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"將完整代碼庫的掃描放到後期執行。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"單獨執行。"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"正如我們可能將提交構建與次級構建分開一樣，這也是為了在反饋時間與反饋質量之間取得平衡。\n"}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"_1053-ai在測試領域的應用"},"children":[{"type":"text","value":"10.5.3 AI在測試領域的應用"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"在代碼分析、缺陷定位等方面Al工具很多，其他UI、安全性測試也有一些： Appdiff、DiffBlue、BugDojo、微軟AI安全風險檢測工具、Facebook Sapienz等。雖然這些智能測試工具還在探索中，但已經有一些喜人的成果出現。"},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"例如 2018 月， Facebook的工程網站 code.facebook.com 上，Ke Mao 和 Mark Harman 撰寫了一篇文章，名為《Sapien z: Intelligent automated so ware testing at scale》，講述了 Sapienz 對 Facebook 自身安卓應用進行智能自動化軟件測試的結果，稱：「除能夠加速測試過程以外， Sapienz測試結果的假陽性率極低…… Sapienz的結果報告中，需要修復的比例占75%。」"}]}]}]}]},{"type":"element","tag":"alert","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://zhuanlan.zhihu.com/p/353949925","rel":["nofollow"]},"children":[{"type":"text","value":"将人工智能（AI）应用于软件测试中"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"將AI應用於軟件測試中"}]}]}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"查找和修復錯誤，利用AI進行更快速的測試"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"利用AI提高DevOps工作效率"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"將AI與機器學習相結合"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"使用AI進行軟件測試"}]}]}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"從單元測試和靜態分析開始"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"向金字塔上移至API和UI級別"}]}]}]},{"type":"element","tag":"alert","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://bbs.huaweicloud.com/forum/thread-1757-1-1.html","rel":["nofollow"]},"children":[{"type":"text","value":"华为大咖分享：AI在软件测试领域应用探索"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"10-16-AI和測試的可能結合點","src":"/code-study/images/cicd-2.0/10/10-16-AI%E5%92%8C%E6%B8%AC%E8%A9%A6%E7%9A%84%E5%8F%AF%E8%83%BD%E7%B5%90%E5%90%88%E9%BB%9E.jpg"},"children":[]}]}]},{"type":"element","tag":"h2","props":{"id":"_106-小結"},"children":[{"type":"text","value":"10.6 小結"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"自動化測試案例運行次數越多，平均成本越低，收益越大"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"自動化測試案例間應該盡可能獨立，互不影響"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"在質量有保障的前提下，自動化測試的案例越少越好"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"遺留代碼的自動化測試編寫應從代碼熱區開始"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"自動化測試案例從測試金字塔的中間層開始補充，投入產出比最高"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"前言","depth":2,"text":"前言"},{"id":"_101-自動化測試的自身定位","depth":2,"text":"10.1 自動化測試的自身定位","children":[{"id":"測試領域的4類活動","depth":3,"text":"測試領域的4類活動"},{"id":"brian-marick-測試4象限","depth":3,"text":"Brian Marick 測試4象限"},{"id":"_1011-自動化測試的優勢","depth":3,"text":"10.1.1 自動化測試的優勢"},{"id":"_1012-自動化測試所需的投入","depth":3,"text":"10.1.2 自動化測試所需的投入"}]},{"id":"_102-突破傳統自動化測試的困境","depth":2,"text":"10.2 突破傳統自動化測試的困境","children":[{"id":"傳統自動化測試的創建流程","depth":3,"text":"傳統自動化測試的創建流程"},{"id":"_1021-傳統自動化測試的特點","depth":3,"text":"10.2.1 傳統自動化測試的特點"},{"id":"_1022-自動化測試的分層","depth":3,"text":"10.2.2 自動化測試的分層"},{"id":"_1023-不同類型的測試金字塔","depth":3,"text":"10.2.3 不同類型的測試金字塔"}]},{"id":"_103-自動化測試的實施策略","depth":2,"text":"10.3 自動化測試的實施策略","children":[{"id":"_1031-增加自動化測試案例的著手點","depth":3,"text":"10.3.1 增加自動化測試案例的著手點"},{"id":"_1032-提高自動化測試的執行次數","depth":3,"text":"10.3.2 提高自動化測試的執行次數"},{"id":"_1033-良好自動化測試的特徵","depth":3,"text":"10.3.3 良好自動化測試的特徵"},{"id":"_1034-共享自動化測試的維護職責","depth":3,"text":"10.3.4 共享自動化測試的維護職責"},{"id":"_1035-程式碼測試覆蓋率","depth":3,"text":"10.3.5 程式碼測試覆蓋率"}]},{"id":"_104-用戶驗收自動化測試要點","depth":2,"text":"10.4 用戶驗收自動化測試要點","children":[{"id":"_1041-先搭建分層框架","depth":3,"text":"10.4.1 先搭建分層框架"},{"id":"_1042-測試案例應保持低位案例數應保持少量低成本","depth":3,"text":"10.4.2 測試案例應保持低位(案例數應保持少量，低成本)"},{"id":"_1043-為自動化測試案例預留api","depth":3,"text":"10.4.3 為自動化測試案例預留API"},{"id":"_1045-測試數據的準備","depth":3,"text":"10.4.5 測試數據的準備"}]},{"id":"_105-其他質量檢查方法","depth":2,"text":"10.5 其他質量檢查方法","children":[{"id":"_1051-差異批注測試方法","depth":3,"text":"10.5.1 差異批注測試方法"},{"id":"_1052-代碼規範檢查與代碼動靜態檢測","depth":3,"text":"10.5.2 代碼規範檢查與代碼動靜態檢測"},{"id":"_1053-ai在測試領域的應用","depth":3,"text":"10.5.3 AI在測試領域的應用"}]},{"id":"_106-小結","depth":2,"text":"10.6 小結"}]}},"_type":"markdown","_id":"content:4.cicd-2.0:10.chapter10.md","_source":"content","_file":"4.cicd-2.0/10.chapter10.md","_extension":"md"}