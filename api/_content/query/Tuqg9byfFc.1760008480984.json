{"_path":"/sdi-aig/chapter7","_dir":"sdi-aig","_draft":false,"_partial":false,"_locale":"","title":"第07章：設計可用於分散式系統的唯一ID生成器","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"第07章設計可用於分散式系統的唯一id生成器"},"children":[{"type":"text","value":"第07章：設計可用於分散式系統的唯一ID生成器"}]},{"type":"element","tag":"div","props":{"style":"width:100%; display:flex; justify-content: left"},"children":[{"type":"text","value":"\n    "},{"type":"element","tag":"img","props":{"src":"/code-study/images/sdi-aig/07/figure7-1.jpg","style":"width: 40%"},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"第1步了解問題並確立設計的範圍"},"children":[{"type":"text","value":"第1步：了解問題並確立設計的範圍"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"為了釐清狀況而提出問題，是解決任何系統設計面試問題的第一步。這裡有一些應試者與面試官互動的例子:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"應試者:唯一 ID 的特性是什麼?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"面試官:ID 必須是唯一而不可重複，而且可進行排序。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"應試者:針對每一個新記錄，ID 都要增加1嗎?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"面試官:ID 要隨時間遞增，但不一定只遞增1。晚上所建立的ID，必須大於當天早上所建立的ID。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"應試者:ID的值只能包含數值嗎?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"面試官:是的，沒錯。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"應試者:ID 的長度有什麼要求?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"面試官:ID 應該為 64位元。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"應試者:系統的規模有多大?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"面試官:系統應該要能夠每秒生成10000個ID。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"以上就是一些你可以詢問面試官的問題範例。重要的是一定要瞭解要求，並釐清所有不清楚的部分。針對這個面試問題，相應的要求列表如下:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ID 必须是唯一而不重複的。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ID 的值只能是數值。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ID 必須 64 位元(bits)。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ID 須依循時間的順序。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"每秒要能夠生成10000個以上的唯一ID。"}]}]},{"type":"element","tag":"h3","props":{"id":"第2步提出高階設計並取得認可"},"children":[{"type":"text","value":"第2步：提出高階設計並取得認可"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"作者介紹了以下四種方式來實作："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"多master複製(Multi-master replicaiton)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"UUID (通用唯一標識符號)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"票證伺服器 (Ticket Server)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Twitter雪片(snowflake)做法"}]}]},{"type":"element","tag":"h4","props":{"id":"多master複製multi-master-replicaiton"},"children":[{"type":"text","value":"多master複製(Multi-master replicaiton)"}]},{"type":"element","tag":"div","props":{"style":"width:100%; display:flex; justify-content: center"},"children":[{"type":"text","value":"\n    "},{"type":"element","tag":"img","props":{"src":"/code-study/images/sdi-aig/07/figure7-2.jpg","style":"width: 80%"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這種做法會用到資料庫的 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"auto_increment"}]},{"type":"text","value":" 功能。不過我們並不是把下一個ID增加1，而是增加，其中的就是所使用資料庫伺服器的數量。如圖7-2 所示，只要把同一個伺服器的前一個ID加上2，就可以生成下一個ID。這種做法解決了一些可擴展性的問題，因為 ID 可根據資料庫伺服器的數量進行擴展。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"不過，這個策略有一些主要的缺點:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"如果是採用多個資料中心，這種做法就難以進行擴展。📌每個資料庫都要調整"},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"auto_increment"}]},{"type":"text","value":"值。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"由多部伺服器分別得出的ID，其值並不一定隨著時間而增加。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"添加或移除伺服器時，擴展性並不好。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"auto_increment"}]},{"type":"text","value":" 如下:"}]},{"type":"element","tag":"pre","props":{"className":"language-sql shiki shiki-themes github-dark github-light monokai","code":"-- 設定全域步進值 (影響所有表)\nSET @@auto_increment_increment = 2;\n\n-- 或者只影響當前 session\nSET SESSION auto_increment_increment = 2;\n","language":"sql","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"-- 設定全域步進值 (影響所有表)\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"SET"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":" @@auto_increment_increment "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#79B8FF;--shiki-default:#005CC5;--shiki-sepia:#AE81FF"},"children":[{"type":"text","value":" 2"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":";\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"-- 或者只影響當前 session\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"SET"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49;--shiki-sepia:#F92672"},"children":[{"type":"text","value":" SESSION"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":" auto_increment_increment "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#79B8FF;--shiki-default:#005CC5;--shiki-sepia:#AE81FF"},"children":[{"type":"text","value":" 2"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":";\n"}]}]}]}]},{"type":"element","tag":"pre","props":{"className":"language-sql shiki shiki-themes github-dark github-light monokai","code":"CREATE TABLE users (\n    id INT AUTO_INCREMENT PRIMARY KEY，\n    name VARCHAR(50)\n);\n\nSET SESSION auto_increment_increment = 3;  -- 每次 +3\n\nINSERT INTO users (name) VALUES ('Alice');\nINSERT INTO users (name) VALUES ('Bob');\nINSERT INTO users (name) VALUES ('Charlie');\n\n-- 結果：\n-- id | name\n--  1 | Alice\n--  4 | Bob\n--  7 | Charlie\n\n","language":"sql","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"CREATE"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49;--shiki-sepia:#F92672"},"children":[{"type":"text","value":" TABLE"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#B392F0;--shiki-default:#6F42C1;--shiki-sepia:#A6E22E"},"children":[{"type":"text","value":" users"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":" (\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"    id "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49;--shiki-sepia:#66D9EF;--shiki-dark-font-style:inherit;--shiki-default-font-style:inherit;--shiki-sepia-font-style:italic"},"children":[{"type":"text","value":"INT"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":" AUTO_INCREMENT "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"PRIMARY KEY"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"，\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"    name"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49;--shiki-sepia:#66D9EF;--shiki-dark-font-style:inherit;--shiki-default-font-style:inherit;--shiki-sepia-font-style:italic"},"children":[{"type":"text","value":" VARCHAR"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#79B8FF;--shiki-default:#005CC5;--shiki-sepia:#AE81FF"},"children":[{"type":"text","value":"50"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":")\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"SET"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49;--shiki-sepia:#F92672"},"children":[{"type":"text","value":" SESSION"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":" auto_increment_increment "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#79B8FF;--shiki-default:#005CC5;--shiki-sepia:#AE81FF"},"children":[{"type":"text","value":" 3"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":";  "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"-- 每次 +3\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"INSERT INTO"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":" users ("}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"name"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":") "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"VALUES"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":" ("}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'Alice'"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"INSERT INTO"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":" users ("}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"name"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":") "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"VALUES"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":" ("}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'Bob'"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"INSERT INTO"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":" users ("}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"name"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":") "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49;--shiki-sepia:#F92672"},"children":[{"type":"text","value":"VALUES"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":" ("}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#9ECBFF;--shiki-default:#032F62;--shiki-sepia:#E6DB74"},"children":[{"type":"text","value":"'Charlie'"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E;--shiki-sepia:#F8F8F2"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"-- 結果：\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":13},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"-- id | name\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":14},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"--  1 | Alice\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":15},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"--  4 | Bob\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":16},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D;--shiki-sepia:#88846F"},"children":[{"type":"text","value":"--  7 | Charlie\n"}]}]}]}]},{"type":"element","tag":"h4","props":{"id":"uuid-通用唯一標識符號"},"children":[{"type":"text","value":"UUID (通用唯一標識符號)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"UUID 是取得唯一ID 的另一種簡便方法。UUID是一個128位元的數字，可用來標識電腦系統中的資訊。UUID 出現重複值的機率非常低。以下內容引自維基百科，「如果每秒產生10億個UUID，大概需要經過100年之後，出現一次重複值的機率才會來到50%」。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這裡就有一個 UUID 的範例: "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"09c93c62-5064-468d-bf8a-c07e1040bfb2UUID"}]},{"type":"text","value":" 可獨立生成，而不需要在伺服器之間進行協調。圖7-3呈現的就是UUID 的設計。"}]},{"type":"element","tag":"div","props":{"style":"width:100%; display:flex; justify-content: center"},"children":[{"type":"text","value":"\n    "},{"type":"element","tag":"img","props":{"src":"/code-study/images/sdi-aig/07/figure7-3.jpg","style":"width: 80%"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在這樣的設計下，每個 Web 伺服器都有一個ID生成器，而且每個 Web 伺服器都可以各自獨立生成ID。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"優點:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"UUID 的生成很簡單。伺服器之間完全不需要進行協調，因此不會出現任何同步問題。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"這個系統很容易進行擴展，因為每個 Web 伺服器都可以自行生成所"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"要使用的ID。ID 生成器可隨著 Web 伺服器輕鬆進行擴展。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"缺點:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ID 的長度為128位元，但我們的要求是64位元。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ID 的值並不會隨著時間遞增。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ID 有可能出現非數字的情況。"}]}]},{"type":"element","tag":"h4","props":{"id":"票證伺服器-ticket-server"},"children":[{"type":"text","value":"票證伺服器 (Ticket Server)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"票證伺服器(ticket server)是另一種生成唯一ID 的有趣方式。票證伺服器是由 Flicker 所開發，可用來生成分散式的主鍵(primary key)。這個系統的運作方式很值得特別瞭解一下。"}]},{"type":"element","tag":"div","props":{"style":"width:100%; display:flex; justify-content: center"},"children":[{"type":"text","value":"\n    "},{"type":"element","tag":"img","props":{"src":"/code-study/images/sdi-aig/07/figure7-4.jpg","style":"width: 80%"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"其構想就是在單一資料庫伺服器(票證伺服器)中，使用中央管理式(centralized)的 auto_increment 功能。如果想要瞭解更多相\n參考 Flicker 的工程部落格文章 "},{"type":"element","tag":"a","props":{"href":"https://code.flickr.net/2010/02/08/ticket-servers-distributed-unique-primary-keys-on-the-cheap/","rel":["nofollow"]},"children":[{"type":"text","value":"2"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"優點:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"數字 ID。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"很容易進行實作，而且可適用於中小型應用。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"缺點:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"可能會有單點故障的問題。由於採用單一的票證伺服器，因此票證伺服器若出現故障，所有依賴它的系統全都會遇到問題。為了避免單點故障，我們可以設定多部票證伺服器。不過，這也會帶來新的挑戰，例如資料同步的問題。"}]}]},{"type":"element","tag":"h5","props":{"id":"flickr-ticket-servers-distributed-unique-primary-keys-on-the-cheap"},"children":[{"type":"text","value":"Flickr: Ticket Servers — Distributed Unique Primary Keys on the Cheap"}]},{"type":"element","tag":"h6","props":{"id":"文章背景與目的"},"children":[{"type":"text","value":"文章背景與目的"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"分片（Sharding）與主-主架構"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nFlickr 將資料分片儲存在多臺 MySQL 上，同時每個分片又採用主—主（master‑master）複製，以提升可靠性與擴充能力。這種架構下，必須確保所有分片生成的 ID 全域唯一，以避免主鍵衝突。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"MySQL "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AUTO_INCREMENT"}]},{"type":"text","value":" 無法跨節點保證唯一性"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n雖然單個 MySQL 實例可以便利地使用 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AUTO_INCREMENT"}]},{"type":"text","value":"，但這在多實例間並無全域唯一保障。"}]}]},{"type":"element","tag":"h6","props":{"id":"為何不使用-guiduuid"},"children":[{"type":"text","value":"為何不使用 GUID（UUID）？"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"GUID 體積大、索引效能差"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nGUID 雖然可保證唯一，但其字串長度及非順序性，會使索引龐大且難以維持在記憶體，導致查詢性能下降。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"缺乏順序性"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nFlickr 需要 ID 有一定順序性，有助於報表、debug，以及部分快取策略，GUID 雖唯一但不適合此處需求。"}]}]},{"type":"element","tag":"h6","props":{"id":"中央-ticket-server解決方案核心"},"children":[{"type":"text","value":"中央 Ticket Server：解決方案核心"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"使用中央 DB 生成 ID"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nFlickr 使用專門的「Ticket Server」，是一臺專用的 MySQL伺服器，只儲存簡化的 ID 表（如 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Tickets64"}]},{"type":"text","value":"）。透過插入一條固定的 stub（stub 欄位）再取得 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"LAST_INSERT_ID()"}]},{"type":"text","value":"，以產生全域唯一、連續的 ID。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"REPLACE INTO"}]},{"type":"text","value":" 機制"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n他們使用 MySQL 的非標準語法 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"REPLACE INTO"}]},{"type":"text","value":"（如果 stub 已存在，則先刪除再插入），來確保每次插入都會自動產生新的 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"AUTO_INCREMENT"}]},{"type":"text","value":" ID。"}]}]},{"type":"element","tag":"h6","props":{"id":"高可用設計雙-ticket-server避免單點故障"},"children":[{"type":"text","value":"高可用設計：雙 Ticket Server（避免單點故障）"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"雙機部署 + 分隔 ID 空間"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n為了避免 Ticket Server 成為單點故障（SPOF），架設兩臺伺服器，並採用 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"auto_increment_increment = 2"}]},{"type":"text","value":" 搭配不同的 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"auto_increment_offset"}]},{"type":"text","value":"（分別為 1 與 2），使一台產生奇數 ID，另一台產生偶數 ID，再以 round-robin 分配請求。"}]}]},{"type":"element","tag":"h6","props":{"id":"其它實務設計細節"},"children":[{"type":"text","value":"其它實務設計細節"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"多種類別 ID (Sequences)"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nFlickr 不只一張 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"Tickets64"}]},{"type":"text","value":" 表，還為各種實體（如 Photos、Accounts、OfflineTasks、Groups）設計獨立序列，以避免彼此干擾與快速消耗。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"簡單但有效的設計哲學"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n整體方案雖不優雅，但符合 Flickr 所講求的：「工程上最蠢但能運作」原則，且自 2006 年就投入生產並穩定運作。"}]}]},{"type":"element","tag":"h4","props":{"id":"twitter雪片snowflake做法"},"children":[{"type":"text","value":"Twitter雪片(snowflake)做法"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"前面所提到的一些做法，分別針對不同的ID 生成系統運作原理，提供了一些不同的構想。不過，這些做法全都不符合我們的特定要求，因此我們還需要另一種做法。Twitter 的唯一 ID 生成系統叫做「snowflake (雪片)」，其構想相當具有啟發性，而且可以滿足我們的要求。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"分而治之(divide and conquer)的分治做法，可說是我們的好朋友。我們會把ID 分成不同的好幾段，而不是直接生成整個ID。圖7-5顯示的就是64位元 ID的佈局方式。"}]},{"type":"element","tag":"div","props":{"style":"width:100%; display:flex; justify-content: center"},"children":[{"type":"text","value":"\n    "},{"type":"element","tag":"img","props":{"src":"/code-study/images/sdi-aig/07/figure7-5.jpg","style":"width: 80%"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"每一段的說明如下。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"符號位元"}]},{"type":"text","value":" : 1位元。永遠為0。保留以供未來使用。它也許可用來區分有正負號與無正負號的數字。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"時間戳"}]},{"type":"text","value":" : 41 位元。從某個時間點(可自定義)以來所經過的毫秒數。我們使用 Twitter 雪片的預設時間點1288834974657，這個時間就相當於 UTC 2010年11月4日01:42:54。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"資料中心 ID"}]},{"type":"text","value":" : 5位元，這裡可以讓我們用來區分2^ 5 = 32 個資料中心。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"機器 ID"}]},{"type":"text","value":" : 5位元，每個資料中心可以有2 ^ 5 = 32 部機器。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"序列編號"}]},{"type":"text","value":" : 12 位元。同一部機器/ process 行程所生成的每個ID，其序列編號每次都會以加1的方式逐漸遞增。這個數字每毫秒都會重設為0。"}]}]},{"type":"element","tag":"h3","props":{"id":"第3步深入設計"},"children":[{"type":"text","value":"第3步：深入設計"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在高階設計中，我們已針對分散式系統討論過一些可用來設計唯一 ID 生成器的各種選項。在這裡我們會選擇 Twitter 雪片 ID 生成器做為參考的做法。接著我們就來深入研究相應的設計。為了重新喚醒我們的記憶，下面重新列出相應的設計圖。"}]},{"type":"element","tag":"div","props":{"style":"width:100%; display:flex; justify-content: center"},"children":[{"type":"text","value":"\n    "},{"type":"element","tag":"img","props":{"src":"/code-study/images/sdi-aig/07/figure7-6.jpg","style":"width: 80%"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"資料中心 ID 與機器 ID 在啟動時就已經選定，通常在系統啟動之後就固定不再改變了。資料中心 ID 與機器 ID的任何修改，都需要進行仔細的檢查，因為如果意外修改了這些值，就有可能導致ID 衝突的情況。ID 生成器在執行時，會生成相應的時間戳與序列編號。"}]},{"type":"element","tag":"h4","props":{"id":"時間戳"},"children":[{"type":"text","value":"時間戳"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"最重要的41位元，就是由時間戳所構成。時間戳會隨著時間而遞增，因此ID 也會隨著時間而遞增。圖7-7 顯示的就是如何把二進位表達方式轉換為 UTC的範例。你也可以用類似的方法，把UTC 轉換回二進位表達方式。"}]},{"type":"element","tag":"div","props":{"style":"width:100%; display:flex; justify-content: center"},"children":[{"type":"text","value":"\n    "},{"type":"element","tag":"img","props":{"src":"/code-study/images/sdi-aig/07/figure7-7.jpg","style":"width: 80%"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"41 位元可以表達的最大時間戳為2 ^41-1 = 2199023255551 毫秒(ms)，相當於:~ 69年 = 2199023255551 毫秒 / 1000 秒 / 365天 / 24小時/3600 秒。這也就表示，這個ID 生成器可正常運作69年，如果改用自定義的方式，把起算時間(epoch time)設定成更接近今天的日期，還可以進一步延後這個可正常運作的時間。69年之後，我們就會需要另一個新的起算時間，或是改用其他技術來對這個ID 進行遷移轉換。"}]},{"type":"element","tag":"h4","props":{"id":"序列編號"},"children":[{"type":"text","value":"序列編號"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"序列編號有12位元，這給了我們2 ^ 12 = 4096種組合。除非同一部伺服器在一毫秒之內生成了多個ID，否則這個欄位的值就會是0。理論上來說，同一部機器在每毫秒內最多可生成4096個新的ID，即 sequence (每毫秒最多 4096 筆)。"}]},{"type":"element","tag":"h3","props":{"id":"第4步匯整總結"},"children":[{"type":"text","value":"第4步：匯整總結"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"我們在本章討論了好幾種設計唯一 ID生成器的不同做法:多 master 複製、UUID、票證伺服器，以及 Twitter 的雪片做法。我們最後選擇採用雪片的做法，因為它可支援我們所有的使用需求，而且可以在分散式環境下進行擴展。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如果在面試結束之前還有多餘的時間，這裡還有一些可以額外聊聊的想法:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"時鐘同步 : 在我們的設計中，我們假設每一部ID 生成伺服器全都具有相同的時鐘。如果伺服器是在多個核心中執行，這個假設就有可能是不正確的。在使用多部機器的做法中，也存在相同的挑戰。時鐘同步解決方案並不在本書的討論範圍之內。不過，瞭解這個\n問題的存在是很重要的。採用網路時間協定(NTP;Network TimeProtocol)，就是解決此問題最受歡迎的一種做法。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"各段長度的調整 : 舉例來說，改用比較短的序列編號、但採用比較多的時間戳位元，對於低並行性、跨越時間更長的應用而言，是一種有效而可行的做法。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"高可用性 : 對於其他任務來說，ID 生成器是非常重要的系統，因此它必須具有很高的可用性。"}]}]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":"html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"第1步了解問題並確立設計的範圍","depth":3,"text":"第1步：了解問題並確立設計的範圍"},{"id":"第2步提出高階設計並取得認可","depth":3,"text":"第2步：提出高階設計並取得認可"},{"id":"第3步深入設計","depth":3,"text":"第3步：深入設計"},{"id":"第4步匯整總結","depth":3,"text":"第4步：匯整總結"}]}},"_type":"markdown","_id":"content:7.sdi-aig:7.chapter7.md","_source":"content","_file":"7.sdi-aig/7.chapter7.md","_extension":"md"}